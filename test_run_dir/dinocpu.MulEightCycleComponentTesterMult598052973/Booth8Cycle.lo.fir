circuit Booth8Cycle :
  module Booth8Cycle :
    input clock : Clock
    input reset : UInt<1>
    input io_multiplicand : UInt<16>
    input io_multiplier : UInt<16>
    input io_start : UInt<1>
    output io_finished : UInt<1>
    output io_product : UInt<32>
  
    reg accUpper : UInt<16>, clock with :
      reset => (UInt<1>("h0"), accUpper) @[Booth8Cycle.scala 140:26]
    reg accLower : UInt<16>, clock with :
      reset => (UInt<1>("h0"), accLower) @[Booth8Cycle.scala 141:26]
    reg mcd : UInt<16>, clock with :
      reset => (UInt<1>("h0"), mcd) @[Booth8Cycle.scala 142:26]
    reg mpl : UInt<17>, clock with :
      reset => (UInt<1>("h0"), mpl) @[Booth8Cycle.scala 143:26]
    reg iter : UInt<5>, clock with :
      reset => (UInt<1>("h0"), iter) @[Booth8Cycle.scala 144:26]
    reg res : UInt<1>, clock with :
      reset => (UInt<1>("h0"), res) @[Booth8Cycle.scala 145:24]
    node _T = bits(mpl, 2, 0) @[Booth8Cycle.scala 166:19]
    node operation = _T @[Booth8Cycle.scala 153:23 Booth8Cycle.scala 166:13]
    node _T_1 = eq(UInt<1>("h0"), operation) @[Conditional.scala 37:30]
    node _T_2 = bits(reset, 0, 0) @[Booth8Cycle.scala 172:13]
    node _T_3 = eq(_T_2, UInt<1>("h0")) @[Booth8Cycle.scala 172:13]
    node _T_4 = eq(UInt<1>("h1"), operation) @[Conditional.scala 37:30]
    node _T_5 = add(accUpper, mcd) @[Booth8Cycle.scala 175:27]
    node _T_6 = tail(_T_5, 1) @[Booth8Cycle.scala 175:27]
    node _T_7 = bits(reset, 0, 0) @[Booth8Cycle.scala 176:13]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[Booth8Cycle.scala 176:13]
    node _T_9 = bits(reset, 0, 0) @[Booth8Cycle.scala 177:13]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[Booth8Cycle.scala 177:13]
    node _T_11 = eq(UInt<2>("h2"), operation) @[Conditional.scala 37:30]
    node _T_12 = add(accUpper, mcd) @[Booth8Cycle.scala 180:27]
    node _T_13 = tail(_T_12, 1) @[Booth8Cycle.scala 180:27]
    node _T_14 = bits(reset, 0, 0) @[Booth8Cycle.scala 181:13]
    node _T_15 = eq(_T_14, UInt<1>("h0")) @[Booth8Cycle.scala 181:13]
    node _T_16 = bits(reset, 0, 0) @[Booth8Cycle.scala 182:13]
    node _T_17 = eq(_T_16, UInt<1>("h0")) @[Booth8Cycle.scala 182:13]
    node _T_18 = eq(UInt<2>("h3"), operation) @[Conditional.scala 37:30]
    node _T_49 = dshl(mcd, UInt<1>("h1")) @[Booth8Cycle.scala 211:20]
    node doubleMCD = bits(_T_49, 15, 0) @[Booth8Cycle.scala 154:23 Booth8Cycle.scala 211:13]
    node _T_19 = add(accUpper, doubleMCD) @[Booth8Cycle.scala 185:27]
    node _T_20 = tail(_T_19, 1) @[Booth8Cycle.scala 185:27]
    node _T_21 = bits(reset, 0, 0) @[Booth8Cycle.scala 186:13]
    node _T_22 = eq(_T_21, UInt<1>("h0")) @[Booth8Cycle.scala 186:13]
    node _T_23 = bits(reset, 0, 0) @[Booth8Cycle.scala 187:13]
    node _T_24 = eq(_T_23, UInt<1>("h0")) @[Booth8Cycle.scala 187:13]
    node _T_25 = eq(UInt<3>("h4"), operation) @[Conditional.scala 37:30]
    node _T_26 = sub(accUpper, doubleMCD) @[Booth8Cycle.scala 190:27]
    node _T_27 = tail(_T_26, 1) @[Booth8Cycle.scala 190:27]
    node _T_28 = bits(reset, 0, 0) @[Booth8Cycle.scala 191:13]
    node _T_29 = eq(_T_28, UInt<1>("h0")) @[Booth8Cycle.scala 191:13]
    node _T_30 = bits(reset, 0, 0) @[Booth8Cycle.scala 192:13]
    node _T_31 = eq(_T_30, UInt<1>("h0")) @[Booth8Cycle.scala 192:13]
    node _T_32 = eq(UInt<3>("h5"), operation) @[Conditional.scala 37:30]
    node _T_33 = sub(accUpper, mcd) @[Booth8Cycle.scala 195:27]
    node _T_34 = tail(_T_33, 1) @[Booth8Cycle.scala 195:27]
    node _T_35 = bits(reset, 0, 0) @[Booth8Cycle.scala 196:13]
    node _T_36 = eq(_T_35, UInt<1>("h0")) @[Booth8Cycle.scala 196:13]
    node _T_37 = bits(reset, 0, 0) @[Booth8Cycle.scala 197:13]
    node _T_38 = eq(_T_37, UInt<1>("h0")) @[Booth8Cycle.scala 197:13]
    node _T_39 = eq(UInt<3>("h6"), operation) @[Conditional.scala 37:30]
    node _T_40 = sub(accUpper, mcd) @[Booth8Cycle.scala 200:27]
    node _T_41 = tail(_T_40, 1) @[Booth8Cycle.scala 200:27]
    node _T_42 = bits(reset, 0, 0) @[Booth8Cycle.scala 201:13]
    node _T_43 = eq(_T_42, UInt<1>("h0")) @[Booth8Cycle.scala 201:13]
    node _T_44 = bits(reset, 0, 0) @[Booth8Cycle.scala 202:13]
    node _T_45 = eq(_T_44, UInt<1>("h0")) @[Booth8Cycle.scala 202:13]
    node _T_46 = eq(UInt<3>("h7"), operation) @[Conditional.scala 37:30]
    node _T_47 = bits(reset, 0, 0) @[Booth8Cycle.scala 207:13]
    node _T_48 = eq(_T_47, UInt<1>("h0")) @[Booth8Cycle.scala 207:13]
    node _GEN_0 = validif(_T_46, accUpper) @[Conditional.scala 39:67]
    node _GEN_1 = mux(_T_39, _T_41, _GEN_0) @[Conditional.scala 39:67]
    node _GEN_2 = mux(_T_32, _T_34, _GEN_1) @[Conditional.scala 39:67]
    node _GEN_3 = mux(_T_25, _T_27, _GEN_2) @[Conditional.scala 39:67]
    node _GEN_4 = mux(_T_18, _T_20, _GEN_3) @[Conditional.scala 39:67]
    node _GEN_5 = mux(_T_11, _T_13, _GEN_4) @[Conditional.scala 39:67]
    node _GEN_6 = mux(_T_4, _T_6, _GEN_5) @[Conditional.scala 39:67]
    node _GEN_7 = mux(_T_1, accUpper, _GEN_6) @[Conditional.scala 40:58]
    node _T_50 = add(iter, UInt<1>("h1")) @[Booth8Cycle.scala 214:20]
    node _T_51 = tail(_T_50, 1) @[Booth8Cycle.scala 214:20]
    node accCalc = _GEN_7 @[Booth8Cycle.scala 151:23 Booth8Cycle.scala 171:15 Booth8Cycle.scala 175:15 Booth8Cycle.scala 180:15 Booth8Cycle.scala 185:15 Booth8Cycle.scala 190:15 Booth8Cycle.scala 195:15 Booth8Cycle.scala 200:15 Booth8Cycle.scala 206:15]
    node _T_52 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 217:26]
    node _T_53 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 217:39]
    node _T_54 = bits(accLower, 15, 2) @[Booth8Cycle.scala 217:62]
    node _T_55 = cat(accCalc, _T_54) @[Cat.scala 29:58]
    node _T_56 = cat(_T_52, _T_53) @[Cat.scala 29:58]
    node _T_57 = cat(_T_56, _T_55) @[Cat.scala 29:58]
    node _T_58 = dshr(mpl, UInt<2>("h2")) @[Booth8Cycle.scala 218:19]
    node _T_59 = cat(accUpper, accLower) @[Cat.scala 29:58]
    node _T_60 = eq(res, UInt<1>("h0")) @[Booth8Cycle.scala 228:25]
    node _T_61 = and(io_start, _T_60) @[Booth8Cycle.scala 228:18]
    node _T_62 = cat(io_multiplier, UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_63 = lt(iter, UInt<4>("h8")) @[Booth8Cycle.scala 239:16]
    node _T_64 = eq(iter, UInt<1>("h0")) @[Booth8Cycle.scala 240:18]
    node _T_65 = bits(reset, 0, 0) @[Booth8Cycle.scala 241:15]
    node _T_66 = eq(_T_65, UInt<1>("h0")) @[Booth8Cycle.scala 241:15]
    node _T_67 = bits(reset, 0, 0) @[Booth8Cycle.scala 244:13]
    node _T_68 = eq(_T_67, UInt<1>("h0")) @[Booth8Cycle.scala 244:13]
    node _T_69 = bits(reset, 0, 0) @[Booth8Cycle.scala 245:13]
    node _T_70 = eq(_T_69, UInt<1>("h0")) @[Booth8Cycle.scala 245:13]
    node _T_71 = bits(reset, 0, 0) @[Booth8Cycle.scala 246:13]
    node _T_72 = eq(_T_71, UInt<1>("h0")) @[Booth8Cycle.scala 246:13]
    node _T_73 = bits(reset, 0, 0) @[Booth8Cycle.scala 247:13]
    node _T_74 = eq(_T_73, UInt<1>("h0")) @[Booth8Cycle.scala 247:13]
    node accShift = _T_57 @[Booth8Cycle.scala 152:23 Booth8Cycle.scala 217:12]
    node _T_75 = bits(accShift, 31, 16) @[Booth8Cycle.scala 252:27]
    node _T_76 = bits(accShift, 15, 0) @[Booth8Cycle.scala 253:27]
    node _GEN_8 = mux(_T_63, UInt<1>("h1"), UInt<1>("h0")) @[Booth8Cycle.scala 239:23]
    node nextMPL = _T_58 @[Booth8Cycle.scala 155:23 Booth8Cycle.scala 218:12]
    node _GEN_9 = mux(_T_63, nextMPL, mpl) @[Booth8Cycle.scala 239:23]
    node _GEN_10 = mux(_T_63, _T_75, accUpper) @[Booth8Cycle.scala 239:23]
    node _GEN_11 = mux(_T_63, _T_76, accLower) @[Booth8Cycle.scala 239:23]
    node nextIter = _T_51 @[Booth8Cycle.scala 150:23 Booth8Cycle.scala 214:12]
    node _GEN_12 = mux(_T_63, nextIter, iter) @[Booth8Cycle.scala 239:23]
    node _GEN_13 = mux(_T_63, UInt<1>("h0"), UInt<1>("h1")) @[Booth8Cycle.scala 239:23]
    node _GEN_14 = mux(_T_61, UInt<1>("h1"), _GEN_8) @[Booth8Cycle.scala 228:34]
    node _GEN_15 = mux(_T_61, UInt<1>("h0"), _GEN_10) @[Booth8Cycle.scala 228:34]
    node _GEN_16 = mux(_T_61, UInt<1>("h0"), _GEN_11) @[Booth8Cycle.scala 228:34]
    node _GEN_17 = mux(_T_61, io_multiplicand, mcd) @[Booth8Cycle.scala 228:34]
    node _GEN_18 = mux(_T_61, _T_62, _GEN_9) @[Booth8Cycle.scala 228:34]
    node _GEN_19 = mux(_T_61, UInt<1>("h0"), _GEN_12) @[Booth8Cycle.scala 228:34]
    node _GEN_20 = mux(_T_61, UInt<1>("h0"), _GEN_13) @[Booth8Cycle.scala 228:34]
    io_finished <= _GEN_20 @[Booth8Cycle.scala 226:15 Booth8Cycle.scala 259:19]
    io_product <= _T_59 @[Booth8Cycle.scala 225:15]
    accUpper <= mux(reset, UInt<16>("h0"), _GEN_15) @[Booth8Cycle.scala 230:14 Booth8Cycle.scala 252:16]
    accLower <= mux(reset, UInt<16>("h0"), _GEN_16) @[Booth8Cycle.scala 231:14 Booth8Cycle.scala 253:16]
    mcd <= mux(reset, UInt<16>("h0"), _GEN_17) @[Booth8Cycle.scala 232:14]
    mpl <= mux(reset, UInt<17>("h0"), _GEN_18) @[Booth8Cycle.scala 233:14 Booth8Cycle.scala 251:16]
    iter <= mux(reset, UInt<5>("h0"), _GEN_19) @[Booth8Cycle.scala 234:14 Booth8Cycle.scala 254:16 Booth8Cycle.scala 260:19]
    res <= mux(reset, UInt<1>("h0"), _GEN_14) @[Booth8Cycle.scala 146:13 Booth8Cycle.scala 229:14 Booth8Cycle.scala 250:14 Booth8Cycle.scala 258:17]
    printf(clock, and(and(and(UInt<1>("h1"), _T_1), _T_3), UInt<1>("h1")), "    000: Do Nothing\n") @[Booth8Cycle.scala 172:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), _T_4), _T_8), UInt<1>("h1")), "    001: Add Multiplicand\n") @[Booth8Cycle.scala 176:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), _T_4), _T_10), UInt<1>("h1")), "     --> Adding %d to %d\n", mcd, accUpper) @[Booth8Cycle.scala 177:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), _T_11), _T_15), UInt<1>("h1")), "    010: Add Multiplicand\n") @[Booth8Cycle.scala 181:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), _T_11), _T_17), UInt<1>("h1")), "     --> Adding %d to %d\n", mcd, accUpper) @[Booth8Cycle.scala 182:13]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), _T_18), _T_22), UInt<1>("h1")), "    011: Add 2 * Multiplicand\n") @[Booth8Cycle.scala 186:13]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), _T_18), _T_24), UInt<1>("h1")), "     --> Adding %d to %d\n", doubleMCD, accUpper) @[Booth8Cycle.scala 187:13]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), _T_25), _T_29), UInt<1>("h1")), "    100: Subtract 2 * Multiplicand\n") @[Booth8Cycle.scala 191:13]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), _T_25), _T_31), UInt<1>("h1")), "     --> Subtracting %d from %d\n", doubleMCD, accUpper) @[Booth8Cycle.scala 192:13]
    printf(clock, and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), eq(_T_25, UInt<1>("h0"))), _T_32), _T_36), UInt<1>("h1")), "    101: Subtract Multiplicand\n") @[Booth8Cycle.scala 196:13]
    printf(clock, and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), eq(_T_25, UInt<1>("h0"))), _T_32), _T_38), UInt<1>("h1")), "     --> Subtracting %d from %d\n", mcd, accUpper) @[Booth8Cycle.scala 197:13]
    printf(clock, and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), eq(_T_25, UInt<1>("h0"))), eq(_T_32, UInt<1>("h0"))), _T_39), _T_43), UInt<1>("h1")), "    110: Subtract Multiplicand\n") @[Booth8Cycle.scala 201:13]
    printf(clock, and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), eq(_T_25, UInt<1>("h0"))), eq(_T_32, UInt<1>("h0"))), _T_39), _T_45), UInt<1>("h1")), "     --> Subtracting %d from %d\n", mcd, accUpper) @[Booth8Cycle.scala 202:13]
    printf(clock, and(and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_1, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), eq(_T_11, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), eq(_T_25, UInt<1>("h0"))), eq(_T_32, UInt<1>("h0"))), eq(_T_39, UInt<1>("h0"))), _T_46), _T_48), UInt<1>("h1")), "    111: Do Nothing\n") @[Booth8Cycle.scala 207:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_61, UInt<1>("h0"))), _T_63), _T_64), _T_66), UInt<1>("h1")), "** Test Initialized: accumulator: %b-%b  || multiplier: %b  ||  multiplicand: %b\n", accUpper, accLower, io_multiplier, mcd) @[Booth8Cycle.scala 241:15]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_61, UInt<1>("h0"))), _T_63), _T_68), UInt<1>("h1")), "Iteration: %d\n", iter) @[Booth8Cycle.scala 244:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_61, UInt<1>("h0"))), _T_63), _T_70), UInt<1>("h1")), "  Registered Values:\n") @[Booth8Cycle.scala 245:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_61, UInt<1>("h0"))), _T_63), _T_72), UInt<1>("h1")), "     * mpl: %b\n", mpl) @[Booth8Cycle.scala 246:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_61, UInt<1>("h0"))), _T_63), _T_74), UInt<1>("h1")), "     * AccUpper: %b | AccLower: %b \n", accUpper, accLower) @[Booth8Cycle.scala 247:13]
