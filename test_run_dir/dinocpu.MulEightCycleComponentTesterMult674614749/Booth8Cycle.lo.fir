circuit Booth8Cycle :
  module Booth8Cycle :
    input clock : Clock
    input reset : UInt<1>
    input io_multiplicand : UInt<16>
    input io_multiplier : UInt<16>
    input io_start : UInt<1>
    output io_finished : UInt<1>
    output io_product : UInt<32>
  
    reg accUpper : UInt<16>, clock with :
      reset => (UInt<1>("h0"), accUpper) @[Booth8Cycle.scala 140:26]
    reg accLower : UInt<16>, clock with :
      reset => (UInt<1>("h0"), accLower) @[Booth8Cycle.scala 141:26]
    reg mcd : UInt<16>, clock with :
      reset => (UInt<1>("h0"), mcd) @[Booth8Cycle.scala 142:26]
    reg mpl : UInt<17>, clock with :
      reset => (UInt<1>("h0"), mpl) @[Booth8Cycle.scala 143:26]
    reg iter : UInt<5>, clock with :
      reset => (UInt<1>("h0"), iter) @[Booth8Cycle.scala 144:26]
    reg res : UInt<1>, clock with :
      reset => (UInt<1>("h0"), res) @[Booth8Cycle.scala 145:24]
    node _T = bits(io_multiplier, 1, 0) @[Booth8Cycle.scala 173:34]
    node _T_1 = cat(_T, UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_2 = eq(iter, UInt<1>("h0")) @[Booth8Cycle.scala 176:14]
    node _T_3 = bits(mpl, 2, 0) @[Booth8Cycle.scala 182:28]
    node temp_op = _T_1 @[Booth8Cycle.scala 160:30 Booth8Cycle.scala 173:14]
    node _GEN_0 = mux(_T_2, temp_op, _T_3) @[Booth8Cycle.scala 176:23]
    node temp_upAcc = pad(UInt<1>("h0"), 16) @[Booth8Cycle.scala 158:30 Booth8Cycle.scala 171:14]
    node _GEN_1 = mux(_T_2, temp_upAcc, accUpper) @[Booth8Cycle.scala 176:23]
    node temp_mcd = io_multiplicand @[Booth8Cycle.scala 159:30 Booth8Cycle.scala 172:14]
    node _GEN_2 = mux(_T_2, temp_mcd, mcd) @[Booth8Cycle.scala 176:23]
    node operation = _GEN_0 @[Booth8Cycle.scala 152:23 Booth8Cycle.scala 177:22 Booth8Cycle.scala 182:22]
    node _T_4 = eq(UInt<1>("h0"), operation) @[Conditional.scala 37:30]
    node _T_5 = bits(reset, 0, 0) @[Booth8Cycle.scala 191:13]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[Booth8Cycle.scala 191:13]
    node _T_7 = eq(UInt<1>("h1"), operation) @[Conditional.scala 37:30]
    node accumulatorUpper = _GEN_1 @[Booth8Cycle.scala 156:30 Booth8Cycle.scala 178:22 Booth8Cycle.scala 183:22]
    node calcMultiplicand = _GEN_2 @[Booth8Cycle.scala 157:30 Booth8Cycle.scala 179:22 Booth8Cycle.scala 184:22]
    node _T_8 = add(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 194:35]
    node _T_9 = tail(_T_8, 1) @[Booth8Cycle.scala 194:35]
    node _T_10 = bits(reset, 0, 0) @[Booth8Cycle.scala 195:13]
    node _T_11 = eq(_T_10, UInt<1>("h0")) @[Booth8Cycle.scala 195:13]
    node _T_12 = bits(reset, 0, 0) @[Booth8Cycle.scala 196:13]
    node _T_13 = eq(_T_12, UInt<1>("h0")) @[Booth8Cycle.scala 196:13]
    node _T_14 = eq(UInt<2>("h2"), operation) @[Conditional.scala 37:30]
    node _T_15 = add(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 199:35]
    node _T_16 = tail(_T_15, 1) @[Booth8Cycle.scala 199:35]
    node _T_17 = bits(reset, 0, 0) @[Booth8Cycle.scala 200:13]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[Booth8Cycle.scala 200:13]
    node _T_19 = bits(reset, 0, 0) @[Booth8Cycle.scala 201:13]
    node _T_20 = eq(_T_19, UInt<1>("h0")) @[Booth8Cycle.scala 201:13]
    node _T_21 = eq(UInt<2>("h3"), operation) @[Conditional.scala 37:30]
    node _T_22 = dshl(calcMultiplicand, UInt<1>("h1")) @[Booth8Cycle.scala 204:55]
    node _T_23 = add(accumulatorUpper, _T_22) @[Booth8Cycle.scala 204:35]
    node _T_24 = tail(_T_23, 1) @[Booth8Cycle.scala 204:35]
    node _T_25 = bits(reset, 0, 0) @[Booth8Cycle.scala 205:13]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[Booth8Cycle.scala 205:13]
    node _T_27 = bits(reset, 0, 0) @[Booth8Cycle.scala 206:13]
    node _T_28 = eq(_T_27, UInt<1>("h0")) @[Booth8Cycle.scala 206:13]
    node _T_29 = eq(UInt<3>("h4"), operation) @[Conditional.scala 37:30]
    node _T_30 = dshl(calcMultiplicand, UInt<1>("h1")) @[Booth8Cycle.scala 209:55]
    node _T_31 = sub(accumulatorUpper, _T_30) @[Booth8Cycle.scala 209:35]
    node _T_32 = tail(_T_31, 1) @[Booth8Cycle.scala 209:35]
    node _T_33 = bits(reset, 0, 0) @[Booth8Cycle.scala 210:13]
    node _T_34 = eq(_T_33, UInt<1>("h0")) @[Booth8Cycle.scala 210:13]
    node _T_35 = bits(reset, 0, 0) @[Booth8Cycle.scala 211:13]
    node _T_36 = eq(_T_35, UInt<1>("h0")) @[Booth8Cycle.scala 211:13]
    node _T_37 = eq(UInt<3>("h5"), operation) @[Conditional.scala 37:30]
    node _T_38 = sub(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 214:35]
    node _T_39 = tail(_T_38, 1) @[Booth8Cycle.scala 214:35]
    node _T_40 = bits(reset, 0, 0) @[Booth8Cycle.scala 215:13]
    node _T_41 = eq(_T_40, UInt<1>("h0")) @[Booth8Cycle.scala 215:13]
    node _T_42 = bits(reset, 0, 0) @[Booth8Cycle.scala 216:13]
    node _T_43 = eq(_T_42, UInt<1>("h0")) @[Booth8Cycle.scala 216:13]
    node _T_44 = eq(UInt<3>("h6"), operation) @[Conditional.scala 37:30]
    node _T_45 = sub(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 219:35]
    node _T_46 = tail(_T_45, 1) @[Booth8Cycle.scala 219:35]
    node _T_47 = bits(reset, 0, 0) @[Booth8Cycle.scala 220:13]
    node _T_48 = eq(_T_47, UInt<1>("h0")) @[Booth8Cycle.scala 220:13]
    node _T_49 = bits(reset, 0, 0) @[Booth8Cycle.scala 221:13]
    node _T_50 = eq(_T_49, UInt<1>("h0")) @[Booth8Cycle.scala 221:13]
    node _T_51 = eq(UInt<3>("h7"), operation) @[Conditional.scala 37:30]
    node _T_52 = bits(reset, 0, 0) @[Booth8Cycle.scala 226:13]
    node _T_53 = eq(_T_52, UInt<1>("h0")) @[Booth8Cycle.scala 226:13]
    node _GEN_3 = validif(_T_51, accumulatorUpper) @[Conditional.scala 39:67]
    node _GEN_4 = mux(_T_44, _T_46, _GEN_3) @[Conditional.scala 39:67]
    node _GEN_5 = mux(_T_37, _T_39, _GEN_4) @[Conditional.scala 39:67]
    node _GEN_6 = mux(_T_29, _T_32, _GEN_5) @[Conditional.scala 39:67]
    node _GEN_7 = mux(_T_21, _T_24, _GEN_6) @[Conditional.scala 39:67]
    node _GEN_8 = mux(_T_14, _T_16, _GEN_7) @[Conditional.scala 39:67]
    node _GEN_9 = mux(_T_7, _T_9, _GEN_8) @[Conditional.scala 39:67]
    node _GEN_10 = mux(_T_4, accumulatorUpper, _GEN_9) @[Conditional.scala 40:58]
    node _T_54 = add(iter, UInt<1>("h1")) @[Booth8Cycle.scala 231:20]
    node _T_55 = tail(_T_54, 1) @[Booth8Cycle.scala 231:20]
    node accCalc = bits(_GEN_10, 15, 0) @[Booth8Cycle.scala 150:23 Booth8Cycle.scala 190:15 Booth8Cycle.scala 194:15 Booth8Cycle.scala 199:15 Booth8Cycle.scala 204:15 Booth8Cycle.scala 209:15 Booth8Cycle.scala 214:15 Booth8Cycle.scala 219:15 Booth8Cycle.scala 225:15]
    node _T_56 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 234:26]
    node _T_57 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 234:39]
    node _T_58 = bits(accLower, 15, 2) @[Booth8Cycle.scala 234:62]
    node _T_59 = cat(accCalc, _T_58) @[Cat.scala 29:58]
    node _T_60 = cat(_T_56, _T_57) @[Cat.scala 29:58]
    node _T_61 = cat(_T_60, _T_59) @[Cat.scala 29:58]
    node _T_62 = dshr(mpl, UInt<2>("h2")) @[Booth8Cycle.scala 235:19]
    node _T_63 = cat(accUpper, accLower) @[Cat.scala 29:58]
    node _T_64 = eq(res, UInt<1>("h0")) @[Booth8Cycle.scala 245:25]
    node _T_65 = and(io_start, _T_64) @[Booth8Cycle.scala 245:18]
    node accShift = _T_61 @[Booth8Cycle.scala 151:23 Booth8Cycle.scala 234:12]
    node _T_66 = bits(accShift, 31, 16) @[Booth8Cycle.scala 247:25]
    node _T_67 = bits(accShift, 15, 0) @[Booth8Cycle.scala 248:25]
    node _T_68 = cat(io_multiplier, UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_69 = lt(iter, UInt<4>("h8")) @[Booth8Cycle.scala 256:16]
    node _T_70 = eq(iter, UInt<1>("h0")) @[Booth8Cycle.scala 257:18]
    node _T_71 = bits(reset, 0, 0) @[Booth8Cycle.scala 258:15]
    node _T_72 = eq(_T_71, UInt<1>("h0")) @[Booth8Cycle.scala 258:15]
    node _T_73 = bits(reset, 0, 0) @[Booth8Cycle.scala 261:13]
    node _T_74 = eq(_T_73, UInt<1>("h0")) @[Booth8Cycle.scala 261:13]
    node _T_75 = bits(reset, 0, 0) @[Booth8Cycle.scala 262:13]
    node _T_76 = eq(_T_75, UInt<1>("h0")) @[Booth8Cycle.scala 262:13]
    node _T_77 = bits(reset, 0, 0) @[Booth8Cycle.scala 263:13]
    node _T_78 = eq(_T_77, UInt<1>("h0")) @[Booth8Cycle.scala 263:13]
    node _T_79 = bits(reset, 0, 0) @[Booth8Cycle.scala 264:13]
    node _T_80 = eq(_T_79, UInt<1>("h0")) @[Booth8Cycle.scala 264:13]
    node _T_81 = bits(accShift, 31, 16) @[Booth8Cycle.scala 269:27]
    node _T_82 = bits(accShift, 15, 0) @[Booth8Cycle.scala 270:27]
    node _GEN_11 = mux(_T_69, UInt<1>("h1"), UInt<1>("h0")) @[Booth8Cycle.scala 256:23]
    node nextMPL = _T_62 @[Booth8Cycle.scala 154:23 Booth8Cycle.scala 235:12]
    node _GEN_12 = mux(_T_69, nextMPL, mpl) @[Booth8Cycle.scala 256:23]
    node _GEN_13 = mux(_T_69, _T_81, accUpper) @[Booth8Cycle.scala 256:23]
    node _GEN_14 = mux(_T_69, _T_82, accLower) @[Booth8Cycle.scala 256:23]
    node nextIter = _T_55 @[Booth8Cycle.scala 149:23 Booth8Cycle.scala 231:12]
    node _GEN_15 = mux(_T_69, nextIter, iter) @[Booth8Cycle.scala 256:23]
    node _GEN_16 = mux(_T_69, UInt<1>("h0"), UInt<1>("h1")) @[Booth8Cycle.scala 256:23]
    node _GEN_17 = mux(_T_65, UInt<1>("h1"), _GEN_11) @[Booth8Cycle.scala 245:34]
    node _GEN_18 = mux(_T_65, _T_66, _GEN_13) @[Booth8Cycle.scala 245:34]
    node _GEN_19 = mux(_T_65, _T_67, _GEN_14) @[Booth8Cycle.scala 245:34]
    node _GEN_20 = mux(_T_65, io_multiplicand, mcd) @[Booth8Cycle.scala 245:34]
    node _GEN_21 = mux(_T_65, _T_68, _GEN_12) @[Booth8Cycle.scala 245:34]
    node _GEN_22 = mux(_T_65, UInt<1>("h1"), _GEN_15) @[Booth8Cycle.scala 245:34]
    node _GEN_23 = mux(_T_65, UInt<1>("h0"), _GEN_16) @[Booth8Cycle.scala 245:34]
    node doubleMCD = validif(UInt<1>("h0"), UInt<16>("h0"))
    io_finished <= _GEN_23 @[Booth8Cycle.scala 243:15 Booth8Cycle.scala 276:19]
    io_product <= _T_63 @[Booth8Cycle.scala 242:15]
    accUpper <= mux(reset, UInt<16>("h0"), _GEN_18) @[Booth8Cycle.scala 247:14 Booth8Cycle.scala 269:16]
    accLower <= mux(reset, UInt<16>("h0"), _GEN_19) @[Booth8Cycle.scala 248:14 Booth8Cycle.scala 270:16]
    mcd <= mux(reset, UInt<16>("h0"), _GEN_20) @[Booth8Cycle.scala 249:14]
    mpl <= mux(reset, UInt<17>("h0"), _GEN_21) @[Booth8Cycle.scala 250:14 Booth8Cycle.scala 268:16]
    iter <= mux(reset, UInt<5>("h0"), _GEN_22) @[Booth8Cycle.scala 251:14 Booth8Cycle.scala 271:16 Booth8Cycle.scala 277:19]
    res <= mux(reset, UInt<1>("h0"), _GEN_17) @[Booth8Cycle.scala 246:14 Booth8Cycle.scala 267:14 Booth8Cycle.scala 275:17]
    printf(clock, and(and(and(UInt<1>("h1"), _T_4), _T_6), UInt<1>("h1")), "    000: Do Nothing\n") @[Booth8Cycle.scala 191:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), _T_7), _T_11), UInt<1>("h1")), "    001: Add Multiplicand\n") @[Booth8Cycle.scala 195:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), _T_7), _T_13), UInt<1>("h1")), "     --> Adding %d to %d\n", mcd, accUpper) @[Booth8Cycle.scala 196:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), _T_14), _T_18), UInt<1>("h1")), "    010: Add Multiplicand\n") @[Booth8Cycle.scala 200:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), _T_14), _T_20), UInt<1>("h1")), "     --> Adding %d to %d\n", mcd, accUpper) @[Booth8Cycle.scala 201:13]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), _T_21), _T_26), UInt<1>("h1")), "    011: Add 2 * Multiplicand\n") @[Booth8Cycle.scala 205:13]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), _T_21), _T_28), UInt<1>("h1")), "     --> Adding %d to %d\n", doubleMCD, accUpper) @[Booth8Cycle.scala 206:13]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), eq(_T_21, UInt<1>("h0"))), _T_29), _T_34), UInt<1>("h1")), "    100: Subtract 2 * Multiplicand\n") @[Booth8Cycle.scala 210:13]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), eq(_T_21, UInt<1>("h0"))), _T_29), _T_36), UInt<1>("h1")), "     --> Subtracting %d from %d\n", doubleMCD, accUpper) @[Booth8Cycle.scala 211:13]
    printf(clock, and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), eq(_T_21, UInt<1>("h0"))), eq(_T_29, UInt<1>("h0"))), _T_37), _T_41), UInt<1>("h1")), "    101: Subtract Multiplicand\n") @[Booth8Cycle.scala 215:13]
    printf(clock, and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), eq(_T_21, UInt<1>("h0"))), eq(_T_29, UInt<1>("h0"))), _T_37), _T_43), UInt<1>("h1")), "     --> Subtracting %d from %d\n", mcd, accUpper) @[Booth8Cycle.scala 216:13]
    printf(clock, and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), eq(_T_21, UInt<1>("h0"))), eq(_T_29, UInt<1>("h0"))), eq(_T_37, UInt<1>("h0"))), _T_44), _T_48), UInt<1>("h1")), "    110: Subtract Multiplicand\n") @[Booth8Cycle.scala 220:13]
    printf(clock, and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), eq(_T_21, UInt<1>("h0"))), eq(_T_29, UInt<1>("h0"))), eq(_T_37, UInt<1>("h0"))), _T_44), _T_50), UInt<1>("h1")), "     --> Subtracting %d from %d\n", mcd, accUpper) @[Booth8Cycle.scala 221:13]
    printf(clock, and(and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_4, UInt<1>("h0"))), eq(_T_7, UInt<1>("h0"))), eq(_T_14, UInt<1>("h0"))), eq(_T_21, UInt<1>("h0"))), eq(_T_29, UInt<1>("h0"))), eq(_T_37, UInt<1>("h0"))), eq(_T_44, UInt<1>("h0"))), _T_51), _T_53), UInt<1>("h1")), "    111: Do Nothing\n") @[Booth8Cycle.scala 226:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_65, UInt<1>("h0"))), _T_69), _T_70), _T_72), UInt<1>("h1")), "** Test Initialized: accumulator: %b-%b  || multiplier: %b  ||  multiplicand: %b\n", accUpper, accLower, io_multiplier, mcd) @[Booth8Cycle.scala 258:15]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_65, UInt<1>("h0"))), _T_69), _T_74), UInt<1>("h1")), "Iteration: %d\n", iter) @[Booth8Cycle.scala 261:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_65, UInt<1>("h0"))), _T_69), _T_76), UInt<1>("h1")), "  Registered Values:\n") @[Booth8Cycle.scala 262:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_65, UInt<1>("h0"))), _T_69), _T_78), UInt<1>("h1")), "     * mpl: %b\n", mpl) @[Booth8Cycle.scala 263:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_65, UInt<1>("h0"))), _T_69), _T_80), UInt<1>("h1")), "     * AccUpper: %b | AccLower: %b \n", accUpper, accLower) @[Booth8Cycle.scala 264:13]
