circuit Booth8Cycle :
  module Booth8Cycle :
    input clock : Clock
    input reset : UInt<1>
    input io_multiplicand : UInt<16>
    input io_multiplier : UInt<16>
    input io_reset : UInt<1>
    output io_finished : UInt<1>
    output io_product : UInt<32>
  
    reg acc : UInt<16>, clock with :
      reset => (UInt<1>("h0"), acc) @[Booth8Cycle.scala 17:26]
    reg iter : UInt<4>, clock with :
      reset => (UInt<1>("h0"), iter) @[Booth8Cycle.scala 18:32]
    reg lastBit : UInt<1>, clock with :
      reset => (UInt<1>("h0"), lastBit) @[Booth8Cycle.scala 19:32]
    reg multFrame : UInt<32>, clock with :
      reset => (UInt<1>("h0"), multFrame) @[Booth8Cycle.scala 20:32]
    node _T = cat(acc, io_multiplier) @[Cat.scala 29:58]
    node _T_1 = eq(iter, UInt<4>("h8")) @[Booth8Cycle.scala 36:20]
    node _T_2 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 41:32]
    node _T_3 = eq(_T_2, UInt<1>("h0")) @[Booth8Cycle.scala 41:36]
    node _T_4 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 42:43]
    node _T_5 = cat(_T_4, lastBit) @[Cat.scala 29:58]
    node _T_6 = eq(_T_5, UInt<2>("h3")) @[Booth8Cycle.scala 42:57]
    node _T_7 = shl(io_multiplicand, 1) @[Booth8Cycle.scala 43:63]
    node _T_8 = add(acc, _T_7) @[Booth8Cycle.scala 43:44]
    node _T_9 = tail(_T_8, 1) @[Booth8Cycle.scala 43:44]
    node _T_10 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 46:49]
    node _T_11 = cat(_T_10, lastBit) @[Cat.scala 29:58]
    node _T_12 = eq(_T_11, UInt<2>("h2")) @[Booth8Cycle.scala 46:63]
    node _T_13 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 46:87]
    node _T_14 = cat(_T_13, lastBit) @[Cat.scala 29:58]
    node _T_15 = eq(_T_14, UInt<1>("h1")) @[Booth8Cycle.scala 46:101]
    node _T_16 = or(_T_12, _T_15) @[Booth8Cycle.scala 46:71]
    node _T_17 = add(acc, io_multiplicand) @[Booth8Cycle.scala 47:44]
    node _T_18 = tail(_T_17, 1) @[Booth8Cycle.scala 47:44]
    node _GEN_0 = mux(_T_16, _T_18, acc) @[Booth8Cycle.scala 46:110]
    node _GEN_1 = mux(_T_6, _T_9, _GEN_0) @[Booth8Cycle.scala 42:66]
    node _T_19 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 56:43]
    node _T_20 = cat(_T_19, lastBit) @[Cat.scala 29:58]
    node _T_21 = eq(_T_20, UInt<1>("h0")) @[Booth8Cycle.scala 56:57]
    node _T_22 = shl(io_multiplicand, 1) @[Booth8Cycle.scala 57:63]
    node _T_23 = sub(acc, _T_22) @[Booth8Cycle.scala 57:44]
    node _T_24 = tail(_T_23, 1) @[Booth8Cycle.scala 57:44]
    node _T_25 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 60:49]
    node _T_26 = cat(_T_25, lastBit) @[Cat.scala 29:58]
    node _T_27 = eq(_T_26, UInt<2>("h2")) @[Booth8Cycle.scala 60:63]
    node _T_28 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 60:87]
    node _T_29 = cat(_T_28, lastBit) @[Cat.scala 29:58]
    node _T_30 = eq(_T_29, UInt<1>("h1")) @[Booth8Cycle.scala 60:101]
    node _T_31 = or(_T_27, _T_30) @[Booth8Cycle.scala 60:71]
    node _T_32 = shl(io_multiplicand, 1) @[Booth8Cycle.scala 61:63]
    node _T_33 = sub(acc, _T_32) @[Booth8Cycle.scala 61:44]
    node _T_34 = tail(_T_33, 1) @[Booth8Cycle.scala 61:44]
    node _GEN_2 = mux(_T_31, _T_34, acc) @[Booth8Cycle.scala 60:110]
    node _GEN_3 = mux(_T_21, _T_24, _GEN_2) @[Booth8Cycle.scala 56:66]
    node _GEN_4 = mux(_T_3, _GEN_1, _GEN_3) @[Booth8Cycle.scala 41:45]
    node _T_35 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 70:37]
    node _T_36 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 73:43]
    node _T_37 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 73:58]
    node _T_38 = bits(multFrame, 31, 2) @[Booth8Cycle.scala 73:73]
    node _T_39 = cat(_T_36, _T_37) @[Cat.scala 29:58]
    node _T_40 = cat(_T_39, _T_38) @[Cat.scala 29:58]
    node _T_41 = bits(reset, 0, 0) @[Booth8Cycle.scala 76:23]
    node _T_42 = eq(_T_41, UInt<1>("h0")) @[Booth8Cycle.scala 76:23]
    node _T_43 = add(iter, UInt<1>("h1")) @[Booth8Cycle.scala 79:30]
    node _T_44 = tail(_T_43, 1) @[Booth8Cycle.scala 79:30]
    node _GEN_5 = mux(_T_1, UInt<1>("h1"), UInt<1>("h0")) @[Booth8Cycle.scala 36:29]
    node _GEN_6 = mux(_T_1, acc, _GEN_4) @[Booth8Cycle.scala 36:29]
    node _GEN_7 = mux(_T_1, lastBit, _T_35) @[Booth8Cycle.scala 36:29]
    node _GEN_8 = mux(_T_1, multFrame, _T_40) @[Booth8Cycle.scala 36:29]
    node _GEN_9 = mux(_T_1, iter, _T_44) @[Booth8Cycle.scala 36:29]
    node _GEN_10 = mux(io_reset, UInt<1>("h0"), _GEN_6) @[Booth8Cycle.scala 27:19]
    node _GEN_11 = mux(io_reset, UInt<1>("h0"), _GEN_9) @[Booth8Cycle.scala 27:19]
    node _GEN_12 = mux(io_reset, UInt<1>("h0"), _GEN_7) @[Booth8Cycle.scala 27:19]
    node _GEN_13 = mux(io_reset, _T, _GEN_8) @[Booth8Cycle.scala 27:19]
    node _GEN_14 = mux(io_reset, UInt<1>("h0"), _GEN_5) @[Booth8Cycle.scala 27:19]
    io_finished <= _GEN_14 @[Booth8Cycle.scala 24:15 Booth8Cycle.scala 37:29]
    io_product <= multFrame @[Booth8Cycle.scala 23:15]
    acc <= mux(reset, UInt<16>("h0"), bits(_GEN_10, 15, 0)) @[Booth8Cycle.scala 28:19 Booth8Cycle.scala 43:37 Booth8Cycle.scala 47:37 Booth8Cycle.scala 51:37 Booth8Cycle.scala 57:37 Booth8Cycle.scala 61:37 Booth8Cycle.scala 65:37]
    iter <= mux(reset, UInt<4>("h0"), _GEN_11) @[Booth8Cycle.scala 29:19 Booth8Cycle.scala 79:22]
    lastBit <= mux(reset, UInt<1>("h0"), _GEN_12) @[Booth8Cycle.scala 30:19 Booth8Cycle.scala 70:25]
    multFrame <= mux(reset, UInt<32>("h0"), _GEN_13) @[Booth8Cycle.scala 31:19 Booth8Cycle.scala 73:27]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_42), UInt<1>("h1")), "\t\t\tIteration: %d || MultFrame: %b\n", iter, multFrame) @[Booth8Cycle.scala 76:23]
