;buildInfoPackage: chisel3, version: 3.2.6, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Booth8Cycle : 
  module Booth8Cycle : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip multiplicand : UInt<16>, flip multiplier : UInt<16>, flip reset : UInt<1>, finished : UInt<1>, product : UInt<32>}
    
    reg acc : UInt<16>, clock with : (reset => (reset, UInt<16>("h00"))) @[Booth8Cycle.scala 17:26]
    reg iter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Booth8Cycle.scala 18:32]
    reg lastBit : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Booth8Cycle.scala 19:32]
    reg multFrame : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Booth8Cycle.scala 20:32]
    io.product <= multFrame @[Booth8Cycle.scala 23:15]
    io.finished <= UInt<1>("h00") @[Booth8Cycle.scala 24:15]
    when io.reset : @[Booth8Cycle.scala 27:19]
      acc <= UInt<1>("h00") @[Booth8Cycle.scala 28:19]
      iter <= UInt<1>("h00") @[Booth8Cycle.scala 29:19]
      lastBit <= UInt<1>("h00") @[Booth8Cycle.scala 30:19]
      node _T = cat(acc, io.multiplier) @[Cat.scala 29:58]
      multFrame <= _T @[Booth8Cycle.scala 31:19]
      skip @[Booth8Cycle.scala 27:19]
    else : @[Booth8Cycle.scala 35:14]
      node _T_1 = eq(iter, UInt<4>("h08")) @[Booth8Cycle.scala 36:20]
      when _T_1 : @[Booth8Cycle.scala 36:29]
        io.finished <= UInt<1>("h01") @[Booth8Cycle.scala 37:29]
        skip @[Booth8Cycle.scala 36:29]
      else : @[Booth8Cycle.scala 40:20]
        node _T_2 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 41:32]
        node _T_3 = eq(_T_2, UInt<1>("h00")) @[Booth8Cycle.scala 41:36]
        when _T_3 : @[Booth8Cycle.scala 41:45]
          node _T_4 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 42:43]
          node _T_5 = cat(_T_4, lastBit) @[Cat.scala 29:58]
          node _T_6 = eq(_T_5, UInt<2>("h03")) @[Booth8Cycle.scala 42:57]
          when _T_6 : @[Booth8Cycle.scala 42:66]
            node _T_7 = shl(io.multiplicand, 1) @[Booth8Cycle.scala 43:63]
            node _T_8 = add(acc, _T_7) @[Booth8Cycle.scala 43:44]
            node _T_9 = tail(_T_8, 1) @[Booth8Cycle.scala 43:44]
            acc <= _T_9 @[Booth8Cycle.scala 43:37]
            skip @[Booth8Cycle.scala 42:66]
          else : @[Booth8Cycle.scala 46:110]
            node _T_10 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 46:49]
            node _T_11 = cat(_T_10, lastBit) @[Cat.scala 29:58]
            node _T_12 = eq(_T_11, UInt<2>("h02")) @[Booth8Cycle.scala 46:63]
            node _T_13 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 46:87]
            node _T_14 = cat(_T_13, lastBit) @[Cat.scala 29:58]
            node _T_15 = eq(_T_14, UInt<1>("h01")) @[Booth8Cycle.scala 46:101]
            node _T_16 = or(_T_12, _T_15) @[Booth8Cycle.scala 46:71]
            when _T_16 : @[Booth8Cycle.scala 46:110]
              node _T_17 = add(acc, io.multiplicand) @[Booth8Cycle.scala 47:44]
              node _T_18 = tail(_T_17, 1) @[Booth8Cycle.scala 47:44]
              acc <= _T_18 @[Booth8Cycle.scala 47:37]
              skip @[Booth8Cycle.scala 46:110]
            else : @[Booth8Cycle.scala 50:36]
              acc <= acc @[Booth8Cycle.scala 51:37]
              skip @[Booth8Cycle.scala 50:36]
          skip @[Booth8Cycle.scala 41:45]
        else : @[Booth8Cycle.scala 55:28]
          node _T_19 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 56:43]
          node _T_20 = cat(_T_19, lastBit) @[Cat.scala 29:58]
          node _T_21 = eq(_T_20, UInt<1>("h00")) @[Booth8Cycle.scala 56:57]
          when _T_21 : @[Booth8Cycle.scala 56:66]
            node _T_22 = shl(io.multiplicand, 1) @[Booth8Cycle.scala 57:63]
            node _T_23 = sub(acc, _T_22) @[Booth8Cycle.scala 57:44]
            node _T_24 = tail(_T_23, 1) @[Booth8Cycle.scala 57:44]
            acc <= _T_24 @[Booth8Cycle.scala 57:37]
            skip @[Booth8Cycle.scala 56:66]
          else : @[Booth8Cycle.scala 60:110]
            node _T_25 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 60:49]
            node _T_26 = cat(_T_25, lastBit) @[Cat.scala 29:58]
            node _T_27 = eq(_T_26, UInt<2>("h02")) @[Booth8Cycle.scala 60:63]
            node _T_28 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 60:87]
            node _T_29 = cat(_T_28, lastBit) @[Cat.scala 29:58]
            node _T_30 = eq(_T_29, UInt<1>("h01")) @[Booth8Cycle.scala 60:101]
            node _T_31 = or(_T_27, _T_30) @[Booth8Cycle.scala 60:71]
            when _T_31 : @[Booth8Cycle.scala 60:110]
              node _T_32 = shl(io.multiplicand, 1) @[Booth8Cycle.scala 61:63]
              node _T_33 = sub(acc, _T_32) @[Booth8Cycle.scala 61:44]
              node _T_34 = tail(_T_33, 1) @[Booth8Cycle.scala 61:44]
              acc <= _T_34 @[Booth8Cycle.scala 61:37]
              skip @[Booth8Cycle.scala 60:110]
            else : @[Booth8Cycle.scala 64:36]
              acc <= acc @[Booth8Cycle.scala 65:37]
              skip @[Booth8Cycle.scala 64:36]
          skip @[Booth8Cycle.scala 55:28]
        node _T_35 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 70:37]
        lastBit <= _T_35 @[Booth8Cycle.scala 70:25]
        node _T_36 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 73:43]
        node _T_37 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 73:58]
        node _T_38 = bits(multFrame, 31, 2) @[Booth8Cycle.scala 73:73]
        node _T_39 = cat(_T_36, _T_37) @[Cat.scala 29:58]
        node _T_40 = cat(_T_39, _T_38) @[Cat.scala 29:58]
        multFrame <= _T_40 @[Booth8Cycle.scala 73:27]
        node _T_41 = bits(reset, 0, 0) @[Booth8Cycle.scala 76:23]
        node _T_42 = eq(_T_41, UInt<1>("h00")) @[Booth8Cycle.scala 76:23]
        when _T_42 : @[Booth8Cycle.scala 76:23]
          printf(clock, UInt<1>(1), "\t\t\tIteration: %d || MultFrame: %b\n", iter, multFrame) @[Booth8Cycle.scala 76:23]
          skip @[Booth8Cycle.scala 76:23]
        node _T_43 = add(iter, UInt<1>("h01")) @[Booth8Cycle.scala 79:30]
        node _T_44 = tail(_T_43, 1) @[Booth8Cycle.scala 79:30]
        iter <= _T_44 @[Booth8Cycle.scala 79:22]
        skip @[Booth8Cycle.scala 40:20]
      skip @[Booth8Cycle.scala 35:14]
    
