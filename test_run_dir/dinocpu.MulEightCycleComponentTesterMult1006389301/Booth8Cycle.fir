;buildInfoPackage: chisel3, version: 3.2.6, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Booth8Cycle : 
  module Booth8Cycle : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip multiplicand : UInt<16>, flip multiplier : UInt<16>, flip reset : UInt<1>, finished : UInt<1>, product : UInt<32>}
    
    wire _T : {upper : UInt<16>, lower : UInt<16>, last : UInt<1>} @[Booth8Cycle.scala 23:33]
    _T.last <= UInt<1>("h00") @[Booth8Cycle.scala 23:33]
    _T.lower <= UInt<16>("h00") @[Booth8Cycle.scala 23:33]
    _T.upper <= UInt<16>("h00") @[Booth8Cycle.scala 23:33]
    reg mf : {upper : UInt<16>, lower : UInt<16>, last : UInt<1>}, clock with : (reset => (reset, _T)) @[Booth8Cycle.scala 23:20]
    reg mcd : UInt<16>, clock with : (reset => (reset, UInt<16>("h00"))) @[Booth8Cycle.scala 26:29]
    reg mpl : UInt<16>, clock with : (reset => (reset, UInt<16>("h00"))) @[Booth8Cycle.scala 27:29]
    reg iter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Booth8Cycle.scala 28:35]
    node _T_1 = cat(mf.upper, mf.lower) @[Cat.scala 29:58]
    io.product <= _T_1 @[Booth8Cycle.scala 31:15]
    io.finished <= UInt<1>("h00") @[Booth8Cycle.scala 32:15]
    when io.reset : @[Booth8Cycle.scala 35:19]
      mf.upper <= UInt<1>("h00") @[Booth8Cycle.scala 36:22]
      mf.lower <= io.multiplier @[Booth8Cycle.scala 37:22]
      mf.last <= UInt<1>("h00") @[Booth8Cycle.scala 38:22]
      mcd <= io.multiplicand @[Booth8Cycle.scala 39:18]
      mpl <= io.multiplier @[Booth8Cycle.scala 40:18]
      iter <= UInt<1>("h00") @[Booth8Cycle.scala 41:18]
      skip @[Booth8Cycle.scala 35:19]
    else : @[Booth8Cycle.scala 45:14]
      node _T_2 = lt(iter, UInt<4>("h08")) @[Booth8Cycle.scala 46:16]
      when _T_2 : @[Booth8Cycle.scala 46:23]
        node _T_3 = bits(mf.lower, 2, 0) @[Booth8Cycle.scala 48:31]
        node _T_4 = bits(reset, 0, 0) @[Booth8Cycle.scala 49:13]
        node _T_5 = eq(_T_4, UInt<1>("h00")) @[Booth8Cycle.scala 49:13]
        when _T_5 : @[Booth8Cycle.scala 49:13]
          printf(clock, UInt<1>(1), "Three-Bit-Op: %b\n", _T_3) @[Booth8Cycle.scala 49:13]
          skip @[Booth8Cycle.scala 49:13]
        node _T_6 = eq(UInt<1>("h00"), _T_3) @[Conditional.scala 37:30]
        when _T_6 : @[Conditional.scala 40:58]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_7 = eq(UInt<1>("h01"), _T_3) @[Conditional.scala 37:30]
          when _T_7 : @[Conditional.scala 39:67]
            node _T_8 = add(mf.upper, mcd) @[Booth8Cycle.scala 60:32]
            node _T_9 = tail(_T_8, 1) @[Booth8Cycle.scala 60:32]
            mf.upper <= _T_9 @[Booth8Cycle.scala 60:20]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_10 = eq(UInt<2>("h02"), _T_3) @[Conditional.scala 37:30]
            when _T_10 : @[Conditional.scala 39:67]
              node _T_11 = add(mf.upper, mcd) @[Booth8Cycle.scala 63:32]
              node _T_12 = tail(_T_11, 1) @[Booth8Cycle.scala 63:32]
              mf.upper <= _T_12 @[Booth8Cycle.scala 63:20]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_13 = eq(UInt<2>("h03"), _T_3) @[Conditional.scala 37:30]
              when _T_13 : @[Conditional.scala 39:67]
                node _T_14 = shl(mcd, 1) @[Booth8Cycle.scala 66:39]
                node _T_15 = add(mf.upper, _T_14) @[Booth8Cycle.scala 66:32]
                node _T_16 = tail(_T_15, 1) @[Booth8Cycle.scala 66:32]
                mf.upper <= _T_16 @[Booth8Cycle.scala 66:20]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_17 = eq(UInt<3>("h04"), _T_3) @[Conditional.scala 37:30]
                when _T_17 : @[Conditional.scala 39:67]
                  node _T_18 = shl(mcd, 1) @[Booth8Cycle.scala 69:39]
                  node _T_19 = sub(mf.upper, _T_18) @[Booth8Cycle.scala 69:32]
                  node _T_20 = tail(_T_19, 1) @[Booth8Cycle.scala 69:32]
                  mf.upper <= _T_20 @[Booth8Cycle.scala 69:20]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_21 = eq(UInt<3>("h05"), _T_3) @[Conditional.scala 37:30]
                  when _T_21 : @[Conditional.scala 39:67]
                    node _T_22 = sub(mf.upper, mcd) @[Booth8Cycle.scala 72:32]
                    node _T_23 = tail(_T_22, 1) @[Booth8Cycle.scala 72:32]
                    mf.upper <= _T_23 @[Booth8Cycle.scala 72:20]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_24 = eq(UInt<3>("h06"), _T_3) @[Conditional.scala 37:30]
                    when _T_24 : @[Conditional.scala 39:67]
                      node _T_25 = sub(mf.upper, mcd) @[Booth8Cycle.scala 75:32]
                      node _T_26 = tail(_T_25, 1) @[Booth8Cycle.scala 75:32]
                      mf.upper <= _T_26 @[Booth8Cycle.scala 75:20]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = eq(UInt<3>("h07"), _T_3) @[Conditional.scala 37:30]
                      when _T_27 : @[Conditional.scala 39:67]
                        skip @[Conditional.scala 39:67]
        node _T_28 = bits(mf.lower, 0, 0) @[Booth8Cycle.scala 82:29]
        mf.last <= _T_28 @[Booth8Cycle.scala 82:18]
        node _T_29 = bits(mf.upper, 0, 0) @[Booth8Cycle.scala 83:33]
        node _T_30 = bits(mf.lower, 15, 1) @[Booth8Cycle.scala 83:46]
        node _T_31 = cat(_T_29, _T_30) @[Cat.scala 29:58]
        mf.lower <= _T_31 @[Booth8Cycle.scala 83:18]
        node _T_32 = bits(mf.upper, 15, 15) @[Booth8Cycle.scala 84:33]
        node _T_33 = bits(mf.upper, 15, 1) @[Booth8Cycle.scala 84:47]
        node _T_34 = cat(_T_32, _T_33) @[Cat.scala 29:58]
        mf.upper <= _T_34 @[Booth8Cycle.scala 84:18]
        node _T_35 = add(iter, UInt<1>("h01")) @[Booth8Cycle.scala 85:26]
        node _T_36 = tail(_T_35, 1) @[Booth8Cycle.scala 85:26]
        iter <= _T_36 @[Booth8Cycle.scala 85:18]
        skip @[Booth8Cycle.scala 46:23]
      else : @[Booth8Cycle.scala 88:16]
        io.finished <= UInt<1>("h01") @[Booth8Cycle.scala 89:19]
        iter <= iter @[Booth8Cycle.scala 90:19]
        skip @[Booth8Cycle.scala 88:16]
      skip @[Booth8Cycle.scala 45:14]
    
