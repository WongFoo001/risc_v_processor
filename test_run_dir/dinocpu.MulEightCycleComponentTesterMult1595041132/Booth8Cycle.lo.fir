circuit Booth8Cycle :
  module Booth8Cycle :
    input clock : Clock
    input reset : UInt<1>
    input io_multiplicand : UInt<16>
    input io_multiplier : UInt<16>
    input io_start : UInt<1>
    output io_finished : UInt<1>
    output io_product : UInt<32>
  
    reg accUpper : UInt<16>, clock with :
      reset => (UInt<1>("h0"), accUpper) @[Booth8Cycle.scala 140:26]
    reg accLower : UInt<16>, clock with :
      reset => (UInt<1>("h0"), accLower) @[Booth8Cycle.scala 141:26]
    reg mcd : UInt<16>, clock with :
      reset => (UInt<1>("h0"), mcd) @[Booth8Cycle.scala 142:26]
    reg mpl : UInt<17>, clock with :
      reset => (UInt<1>("h0"), mpl) @[Booth8Cycle.scala 143:26]
    reg iter : UInt<5>, clock with :
      reset => (UInt<1>("h0"), iter) @[Booth8Cycle.scala 144:26]
    reg res : UInt<1>, clock with :
      reset => (UInt<1>("h0"), res) @[Booth8Cycle.scala 145:26]
    reg multFin : UInt<1>, clock with :
      reset => (UInt<1>("h0"), multFin) @[Booth8Cycle.scala 146:26]
    node _T = bits(io_multiplier, 1, 0) @[Booth8Cycle.scala 174:34]
    node _T_1 = cat(_T, UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_2 = eq(iter, UInt<1>("h0")) @[Booth8Cycle.scala 177:14]
    node temp_op = _T_1 @[Booth8Cycle.scala 161:30 Booth8Cycle.scala 174:14]
    node _T_21 = bits(mpl, 2, 0) @[Booth8Cycle.scala 184:28]
    node _GEN_0 = mux(_T_2, temp_op, _T_21) @[Booth8Cycle.scala 177:23]
    node operation = _GEN_0 @[Booth8Cycle.scala 153:23 Booth8Cycle.scala 178:22 Booth8Cycle.scala 184:22]
    node _T_28 = eq(UInt<1>("h0"), operation) @[Conditional.scala 37:30]
    node temp_upAcc = pad(UInt<1>("h0"), 16) @[Booth8Cycle.scala 159:30 Booth8Cycle.scala 172:14]
    node _GEN_1 = mux(_T_2, temp_upAcc, accUpper) @[Booth8Cycle.scala 177:23]
    node accumulatorUpper = _GEN_1 @[Booth8Cycle.scala 157:30 Booth8Cycle.scala 179:22 Booth8Cycle.scala 185:22]
    node _T_31 = eq(UInt<1>("h1"), operation) @[Conditional.scala 37:30]
    node temp_mcd = io_multiplicand @[Booth8Cycle.scala 160:30 Booth8Cycle.scala 173:14]
    node _GEN_2 = mux(_T_2, temp_mcd, mcd) @[Booth8Cycle.scala 177:23]
    node calcMultiplicand = _GEN_2 @[Booth8Cycle.scala 158:30 Booth8Cycle.scala 180:22 Booth8Cycle.scala 186:22]
    node _T_32 = add(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 197:35]
    node _T_33 = tail(_T_32, 1) @[Booth8Cycle.scala 197:35]
    node _T_38 = eq(UInt<2>("h2"), operation) @[Conditional.scala 37:30]
    node _T_39 = add(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 202:35]
    node _T_40 = tail(_T_39, 1) @[Booth8Cycle.scala 202:35]
    node _T_45 = eq(UInt<2>("h3"), operation) @[Conditional.scala 37:30]
    node _T_46 = dshl(calcMultiplicand, UInt<1>("h1")) @[Booth8Cycle.scala 207:55]
    node _T_47 = add(accumulatorUpper, _T_46) @[Booth8Cycle.scala 207:35]
    node _T_48 = tail(_T_47, 1) @[Booth8Cycle.scala 207:35]
    node _T_54 = eq(UInt<3>("h4"), operation) @[Conditional.scala 37:30]
    node _T_55 = dshl(calcMultiplicand, UInt<1>("h1")) @[Booth8Cycle.scala 212:55]
    node _T_56 = sub(accumulatorUpper, _T_55) @[Booth8Cycle.scala 212:35]
    node _T_57 = tail(_T_56, 1) @[Booth8Cycle.scala 212:35]
    node _T_63 = eq(UInt<3>("h5"), operation) @[Conditional.scala 37:30]
    node _T_64 = sub(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 217:35]
    node _T_65 = tail(_T_64, 1) @[Booth8Cycle.scala 217:35]
    node _T_70 = eq(UInt<3>("h6"), operation) @[Conditional.scala 37:30]
    node _T_71 = sub(accumulatorUpper, calcMultiplicand) @[Booth8Cycle.scala 222:35]
    node _T_72 = tail(_T_71, 1) @[Booth8Cycle.scala 222:35]
    node _T_77 = eq(UInt<3>("h7"), operation) @[Conditional.scala 37:30]
    node _GEN_4 = validif(_T_77, accumulatorUpper) @[Conditional.scala 39:67]
    node _GEN_5 = mux(_T_70, _T_72, _GEN_4) @[Conditional.scala 39:67]
    node _GEN_6 = mux(_T_63, _T_65, _GEN_5) @[Conditional.scala 39:67]
    node _GEN_7 = mux(_T_54, _T_57, _GEN_6) @[Conditional.scala 39:67]
    node _GEN_8 = mux(_T_45, _T_48, _GEN_7) @[Conditional.scala 39:67]
    node _GEN_9 = mux(_T_38, _T_40, _GEN_8) @[Conditional.scala 39:67]
    node _GEN_10 = mux(_T_31, _T_33, _GEN_9) @[Conditional.scala 39:67]
    node _GEN_11 = mux(_T_28, accumulatorUpper, _GEN_10) @[Conditional.scala 40:58]
    node accCalc = bits(_GEN_11, 15, 0) @[Booth8Cycle.scala 151:23 Booth8Cycle.scala 193:15 Booth8Cycle.scala 197:15 Booth8Cycle.scala 202:15 Booth8Cycle.scala 207:15 Booth8Cycle.scala 212:15 Booth8Cycle.scala 217:15 Booth8Cycle.scala 222:15 Booth8Cycle.scala 228:15]
    node _T_3 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 181:36]
    node _T_4 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 181:49]
    node _T_5 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_6 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_7 = cat(_T_6, _T_5) @[Cat.scala 29:58]
    node _T_8 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_9 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 29:58]
    node _T_11 = cat(_T_10, _T_7) @[Cat.scala 29:58]
    node _T_12 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_13 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_14 = cat(_T_13, _T_12) @[Cat.scala 29:58]
    node _T_15 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_16 = cat(_T_3, _T_4) @[Cat.scala 29:58]
    node _T_17 = cat(_T_16, accCalc) @[Cat.scala 29:58]
    node _T_18 = cat(_T_17, _T_15) @[Cat.scala 29:58]
    node _T_19 = cat(_T_18, _T_14) @[Cat.scala 29:58]
    node _T_20 = cat(_T_19, _T_11) @[Cat.scala 29:58]
    node _T_22 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 187:36]
    node _T_23 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 187:49]
    node _T_24 = bits(accLower, 15, 2) @[Booth8Cycle.scala 187:72]
    node _T_25 = cat(accCalc, _T_24) @[Cat.scala 29:58]
    node _T_26 = cat(_T_22, _T_23) @[Cat.scala 29:58]
    node _T_27 = cat(_T_26, _T_25) @[Cat.scala 29:58]
    node _GEN_3 = mux(_T_2, _T_20, _T_27) @[Booth8Cycle.scala 177:23]
    node _T_29 = bits(reset, 0, 0) @[Booth8Cycle.scala 194:13]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[Booth8Cycle.scala 194:13]
    node _T_34 = bits(reset, 0, 0) @[Booth8Cycle.scala 198:13]
    node _T_35 = eq(_T_34, UInt<1>("h0")) @[Booth8Cycle.scala 198:13]
    node _T_36 = bits(reset, 0, 0) @[Booth8Cycle.scala 199:13]
    node _T_37 = eq(_T_36, UInt<1>("h0")) @[Booth8Cycle.scala 199:13]
    node _T_41 = bits(reset, 0, 0) @[Booth8Cycle.scala 203:13]
    node _T_42 = eq(_T_41, UInt<1>("h0")) @[Booth8Cycle.scala 203:13]
    node _T_43 = bits(reset, 0, 0) @[Booth8Cycle.scala 204:13]
    node _T_44 = eq(_T_43, UInt<1>("h0")) @[Booth8Cycle.scala 204:13]
    node _T_49 = bits(reset, 0, 0) @[Booth8Cycle.scala 208:13]
    node _T_50 = eq(_T_49, UInt<1>("h0")) @[Booth8Cycle.scala 208:13]
    node _T_51 = dshl(calcMultiplicand, UInt<1>("h1")) @[Booth8Cycle.scala 209:62]
    node _T_52 = bits(reset, 0, 0) @[Booth8Cycle.scala 209:13]
    node _T_53 = eq(_T_52, UInt<1>("h0")) @[Booth8Cycle.scala 209:13]
    node _T_58 = bits(reset, 0, 0) @[Booth8Cycle.scala 213:13]
    node _T_59 = eq(_T_58, UInt<1>("h0")) @[Booth8Cycle.scala 213:13]
    node _T_60 = dshl(calcMultiplicand, UInt<1>("h1")) @[Booth8Cycle.scala 214:69]
    node _T_61 = bits(reset, 0, 0) @[Booth8Cycle.scala 214:13]
    node _T_62 = eq(_T_61, UInt<1>("h0")) @[Booth8Cycle.scala 214:13]
    node _T_66 = bits(reset, 0, 0) @[Booth8Cycle.scala 218:13]
    node _T_67 = eq(_T_66, UInt<1>("h0")) @[Booth8Cycle.scala 218:13]
    node _T_68 = bits(reset, 0, 0) @[Booth8Cycle.scala 219:13]
    node _T_69 = eq(_T_68, UInt<1>("h0")) @[Booth8Cycle.scala 219:13]
    node _T_73 = bits(reset, 0, 0) @[Booth8Cycle.scala 223:13]
    node _T_74 = eq(_T_73, UInt<1>("h0")) @[Booth8Cycle.scala 223:13]
    node _T_75 = bits(reset, 0, 0) @[Booth8Cycle.scala 224:13]
    node _T_76 = eq(_T_75, UInt<1>("h0")) @[Booth8Cycle.scala 224:13]
    node _T_78 = bits(reset, 0, 0) @[Booth8Cycle.scala 229:13]
    node _T_79 = eq(_T_78, UInt<1>("h0")) @[Booth8Cycle.scala 229:13]
    node _T_80 = add(iter, UInt<1>("h1")) @[Booth8Cycle.scala 234:20]
    node _T_81 = tail(_T_80, 1) @[Booth8Cycle.scala 234:20]
    node _T_82 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 237:26]
    node _T_83 = bits(accCalc, 15, 15) @[Booth8Cycle.scala 237:39]
    node _T_84 = bits(accLower, 15, 2) @[Booth8Cycle.scala 237:62]
    node _T_85 = cat(accCalc, _T_84) @[Cat.scala 29:58]
    node _T_86 = cat(_T_82, _T_83) @[Cat.scala 29:58]
    node _T_87 = cat(_T_86, _T_85) @[Cat.scala 29:58]
    node _T_88 = dshr(mpl, UInt<2>("h2")) @[Booth8Cycle.scala 238:19]
    node _T_89 = cat(accUpper, accLower) @[Cat.scala 29:58]
    node _T_90 = eq(res, UInt<1>("h0")) @[Booth8Cycle.scala 248:25]
    node _T_91 = and(io_start, _T_90) @[Booth8Cycle.scala 248:18]
    node accShift = _T_87 @[Booth8Cycle.scala 152:23 Booth8Cycle.scala 181:22 Booth8Cycle.scala 187:22 Booth8Cycle.scala 237:12]
    node _T_92 = bits(accShift, 31, 16) @[Booth8Cycle.scala 250:25]
    node _T_93 = bits(accShift, 15, 0) @[Booth8Cycle.scala 251:25]
    node _T_94 = cat(io_multiplier, UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_95 = dshr(_T_94, UInt<2>("h2")) @[Booth8Cycle.scala 253:41]
    node _T_96 = bits(accShift, 31, 16) @[Booth8Cycle.scala 255:79]
    node _T_97 = bits(accShift, 15, 0) @[Booth8Cycle.scala 255:97]
    node _T_98 = cat(io_multiplier, UInt<1>("h0")) @[Cat.scala 29:58]
    node _T_99 = dshr(_T_98, UInt<2>("h2")) @[Booth8Cycle.scala 255:147]
    node _T_100 = bits(reset, 0, 0) @[Booth8Cycle.scala 255:11]
    node _T_101 = eq(_T_100, UInt<1>("h0")) @[Booth8Cycle.scala 255:11]
    node _T_102 = bits(reset, 0, 0) @[Booth8Cycle.scala 260:11]
    node _T_103 = eq(_T_102, UInt<1>("h0")) @[Booth8Cycle.scala 260:11]
    node _T_104 = lt(iter, UInt<4>("h8")) @[Booth8Cycle.scala 261:16]
    node _T_105 = bits(reset, 0, 0) @[Booth8Cycle.scala 263:13]
    node _T_106 = eq(_T_105, UInt<1>("h0")) @[Booth8Cycle.scala 263:13]
    node _T_107 = bits(reset, 0, 0) @[Booth8Cycle.scala 264:13]
    node _T_108 = eq(_T_107, UInt<1>("h0")) @[Booth8Cycle.scala 264:13]
    node _T_109 = bits(reset, 0, 0) @[Booth8Cycle.scala 265:13]
    node _T_110 = eq(_T_109, UInt<1>("h0")) @[Booth8Cycle.scala 265:13]
    node _T_111 = bits(reset, 0, 0) @[Booth8Cycle.scala 266:13]
    node _T_112 = eq(_T_111, UInt<1>("h0")) @[Booth8Cycle.scala 266:13]
    node _T_113 = bits(accShift, 31, 16) @[Booth8Cycle.scala 273:27]
    node _T_114 = bits(accShift, 15, 0) @[Booth8Cycle.scala 274:27]
    node _T_115 = bits(reset, 0, 0) @[Booth8Cycle.scala 279:13]
    node _T_116 = eq(_T_115, UInt<1>("h0")) @[Booth8Cycle.scala 279:13]
    node _T_117 = bits(reset, 0, 0) @[Booth8Cycle.scala 280:13]
    node _T_118 = eq(_T_117, UInt<1>("h0")) @[Booth8Cycle.scala 280:13]
    node _T_119 = bits(reset, 0, 0) @[Booth8Cycle.scala 284:13]
    node _T_120 = eq(_T_119, UInt<1>("h0")) @[Booth8Cycle.scala 284:13]
    node _GEN_12 = mux(_T_104, UInt<1>("h0"), UInt<1>("h1")) @[Booth8Cycle.scala 261:23]
    node _GEN_13 = mux(_T_104, UInt<1>("h1"), UInt<1>("h0")) @[Booth8Cycle.scala 261:23]
    node _GEN_14 = mux(_T_104, mcd, mcd) @[Booth8Cycle.scala 261:23]
    node nextMPL = _T_88 @[Booth8Cycle.scala 155:23 Booth8Cycle.scala 238:12]
    node _GEN_15 = mux(_T_104, nextMPL, mpl) @[Booth8Cycle.scala 261:23]
    node _GEN_16 = mux(_T_104, _T_113, accUpper) @[Booth8Cycle.scala 261:23]
    node _GEN_17 = mux(_T_104, _T_114, accLower) @[Booth8Cycle.scala 261:23]
    node nextIter = _T_81 @[Booth8Cycle.scala 150:23 Booth8Cycle.scala 234:12]
    node _GEN_18 = mux(_T_104, nextIter, iter) @[Booth8Cycle.scala 261:23]
    node _GEN_19 = mux(_T_91, UInt<1>("h1"), _GEN_13) @[Booth8Cycle.scala 248:34]
    node _GEN_20 = mux(_T_91, _T_92, _GEN_16) @[Booth8Cycle.scala 248:34]
    node _GEN_21 = mux(_T_91, _T_93, _GEN_17) @[Booth8Cycle.scala 248:34]
    node _GEN_22 = mux(_T_91, io_multiplicand, _GEN_14) @[Booth8Cycle.scala 248:34]
    node _GEN_23 = mux(_T_91, _T_95, _GEN_15) @[Booth8Cycle.scala 248:34]
    node _GEN_24 = mux(_T_91, UInt<1>("h1"), _GEN_18) @[Booth8Cycle.scala 248:34]
    node _GEN_25 = mux(_T_91, multFin, _GEN_12) @[Booth8Cycle.scala 248:34]
    node doubleMCD = validif(UInt<1>("h0"), UInt<16>("h0"))
    io_finished <= multFin @[Booth8Cycle.scala 246:15]
    io_product <= _T_89 @[Booth8Cycle.scala 245:15]
    accUpper <= mux(reset, UInt<16>("h0"), _GEN_20) @[Booth8Cycle.scala 250:14 Booth8Cycle.scala 273:16]
    accLower <= mux(reset, UInt<16>("h0"), _GEN_21) @[Booth8Cycle.scala 251:14 Booth8Cycle.scala 274:16]
    mcd <= mux(reset, UInt<16>("h0"), _GEN_22) @[Booth8Cycle.scala 252:14 Booth8Cycle.scala 271:16]
    mpl <= mux(reset, UInt<17>("h0"), _GEN_23) @[Booth8Cycle.scala 253:14 Booth8Cycle.scala 272:16]
    iter <= mux(reset, UInt<5>("h0"), _GEN_24) @[Booth8Cycle.scala 254:14 Booth8Cycle.scala 275:16 Booth8Cycle.scala 283:19]
    res <= mux(reset, UInt<1>("h0"), _GEN_19) @[Booth8Cycle.scala 249:14 Booth8Cycle.scala 270:16 Booth8Cycle.scala 281:19]
    multFin <= mux(reset, UInt<1>("h0"), _GEN_25) @[Booth8Cycle.scala 269:16 Booth8Cycle.scala 282:19]
    printf(clock, and(and(and(UInt<1>("h1"), _T_28), _T_30), UInt<1>("h1")), "    000: Do Nothing\n") @[Booth8Cycle.scala 194:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), _T_31), _T_35), UInt<1>("h1")), "    001: Add Multiplicand\n") @[Booth8Cycle.scala 198:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), _T_31), _T_37), UInt<1>("h1")), "     --> Adding %d to %d\n", calcMultiplicand, accumulatorUpper) @[Booth8Cycle.scala 199:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), _T_38), _T_42), UInt<1>("h1")), "    010: Add Multiplicand\n") @[Booth8Cycle.scala 203:13]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), _T_38), _T_44), UInt<1>("h1")), "     --> Adding %d to %d\n", calcMultiplicand, accumulatorUpper) @[Booth8Cycle.scala 204:13]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), _T_45), _T_50), UInt<1>("h1")), "    011: Add 2 * Multiplicand\n") @[Booth8Cycle.scala 208:13]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), _T_45), _T_53), UInt<1>("h1")), "     --> Adding %d to %d\n", _T_51, accumulatorUpper) @[Booth8Cycle.scala 209:13]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), _T_54), _T_59), UInt<1>("h1")), "    100: Subtract 2 * Multiplicand\n") @[Booth8Cycle.scala 213:13]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), _T_54), _T_62), UInt<1>("h1")), "     --> Subtracting %d from %d\n", _T_60, accumulatorUpper) @[Booth8Cycle.scala 214:13]
    printf(clock, and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), eq(_T_54, UInt<1>("h0"))), _T_63), _T_67), UInt<1>("h1")), "    101: Subtract Multiplicand\n") @[Booth8Cycle.scala 218:13]
    printf(clock, and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), eq(_T_54, UInt<1>("h0"))), _T_63), _T_69), UInt<1>("h1")), "     --> Subtracting %d from %d\n", calcMultiplicand, accumulatorUpper) @[Booth8Cycle.scala 219:13]
    printf(clock, and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), eq(_T_54, UInt<1>("h0"))), eq(_T_63, UInt<1>("h0"))), _T_70), _T_74), UInt<1>("h1")), "    110: Subtract Multiplicand\n") @[Booth8Cycle.scala 223:13]
    printf(clock, and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), eq(_T_54, UInt<1>("h0"))), eq(_T_63, UInt<1>("h0"))), _T_70), _T_76), UInt<1>("h1")), "     --> Subtracting %d from %d\n", calcMultiplicand, accumulatorUpper) @[Booth8Cycle.scala 224:13]
    printf(clock, and(and(and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T_28, UInt<1>("h0"))), eq(_T_31, UInt<1>("h0"))), eq(_T_38, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), eq(_T_54, UInt<1>("h0"))), eq(_T_63, UInt<1>("h0"))), eq(_T_70, UInt<1>("h0"))), _T_77), _T_79), UInt<1>("h1")), "    111: Do Nothing\n") @[Booth8Cycle.scala 229:13]
    printf(clock, and(and(and(UInt<1>("h1"), _T_91), _T_101), UInt<1>("h1")), "REGISTERS INITIALIZED  -- %b %b  ||  mcd: %b  mpl: %b\n", _T_96, _T_97, io_multiplicand, _T_99) @[Booth8Cycle.scala 255:11]
    printf(clock, and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), _T_103), UInt<1>("h1")), "Entered Register Otherwise\n") @[Booth8Cycle.scala 260:11]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), _T_104), _T_106), UInt<1>("h1")), "Iteration: %d\n", iter) @[Booth8Cycle.scala 263:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), _T_104), _T_108), UInt<1>("h1")), "  Registered Values:\n") @[Booth8Cycle.scala 264:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), _T_104), _T_110), UInt<1>("h1")), "     * mpl: %b\n", mpl) @[Booth8Cycle.scala 265:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), _T_104), _T_112), UInt<1>("h1")), "     * AccUpper: %b | AccLower: %b \n", accUpper, accLower) @[Booth8Cycle.scala 266:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), eq(_T_104, UInt<1>("h0"))), _T_116), UInt<1>("h1")), "Iter: %d -- Multiplier Finished Calculating...\n", iter) @[Booth8Cycle.scala 279:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), eq(_T_104, UInt<1>("h0"))), _T_118), UInt<1>("h1")), "    Start Signal: %b\n", io_start) @[Booth8Cycle.scala 280:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(_T_91, UInt<1>("h0"))), eq(_T_104, UInt<1>("h0"))), _T_120), UInt<1>("h1")), " ************************* TEST SEPERATED ******************************\n") @[Booth8Cycle.scala 284:13]
