circuit Booth8Cycle :
  module Booth8Cycle :
    input clock : Clock
    input reset : UInt<1>
    input io_multiplicand : UInt<16>
    input io_multiplier : UInt<16>
    input io_reset : UInt<1>
    output io_finished : UInt<1>
    output io_product : UInt<32>
  
    reg acc : UInt<16>, clock with :
      reset => (UInt<1>("h0"), acc) @[Booth8Cycle.scala 17:26]
    reg iter : UInt<4>, clock with :
      reset => (UInt<1>("h0"), iter) @[Booth8Cycle.scala 18:32]
    reg lastBit : UInt<1>, clock with :
      reset => (UInt<1>("h0"), lastBit) @[Booth8Cycle.scala 19:32]
    reg multFrame : UInt<32>, clock with :
      reset => (UInt<1>("h0"), multFrame) @[Booth8Cycle.scala 20:32]
    node _T = cat(acc, io_multiplier) @[Cat.scala 29:58]
    node _T_1 = eq(iter, UInt<3>("h7")) @[Booth8Cycle.scala 36:20]
    node _T_2 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 41:32]
    node _T_3 = eq(_T_2, UInt<1>("h0")) @[Booth8Cycle.scala 41:36]
    node _T_4 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 42:43]
    node _T_5 = cat(_T_4, lastBit) @[Cat.scala 29:58]
    node _T_6 = eq(_T_5, UInt<2>("h3")) @[Booth8Cycle.scala 42:57]
    node _T_7 = shl(io_multiplicand, 1) @[Booth8Cycle.scala 43:63]
    node _T_8 = add(acc, _T_7) @[Booth8Cycle.scala 43:44]
    node _T_9 = tail(_T_8, 1) @[Booth8Cycle.scala 43:44]
    node _T_10 = bits(reset, 0, 0) @[Booth8Cycle.scala 44:17]
    node _T_11 = eq(_T_10, UInt<1>("h0")) @[Booth8Cycle.scala 44:17]
    node _T_12 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 47:49]
    node _T_13 = cat(_T_12, lastBit) @[Cat.scala 29:58]
    node _T_14 = eq(_T_13, UInt<2>("h2")) @[Booth8Cycle.scala 47:63]
    node _T_15 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 47:87]
    node _T_16 = cat(_T_15, lastBit) @[Cat.scala 29:58]
    node _T_17 = eq(_T_16, UInt<1>("h1")) @[Booth8Cycle.scala 47:101]
    node _T_18 = or(_T_14, _T_17) @[Booth8Cycle.scala 47:71]
    node _T_19 = add(acc, io_multiplicand) @[Booth8Cycle.scala 48:44]
    node _T_20 = tail(_T_19, 1) @[Booth8Cycle.scala 48:44]
    node _T_21 = bits(reset, 0, 0) @[Booth8Cycle.scala 49:17]
    node _T_22 = eq(_T_21, UInt<1>("h0")) @[Booth8Cycle.scala 49:17]
    node _T_23 = bits(reset, 0, 0) @[Booth8Cycle.scala 54:17]
    node _T_24 = eq(_T_23, UInt<1>("h0")) @[Booth8Cycle.scala 54:17]
    node _GEN_0 = mux(_T_18, _T_20, acc) @[Booth8Cycle.scala 47:110]
    node _GEN_1 = mux(_T_6, _T_9, _GEN_0) @[Booth8Cycle.scala 42:66]
    node _T_25 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 59:43]
    node _T_26 = cat(_T_25, lastBit) @[Cat.scala 29:58]
    node _T_27 = eq(_T_26, UInt<1>("h0")) @[Booth8Cycle.scala 59:57]
    node _T_28 = shl(io_multiplicand, 1) @[Booth8Cycle.scala 60:63]
    node _T_29 = sub(acc, _T_28) @[Booth8Cycle.scala 60:44]
    node _T_30 = tail(_T_29, 1) @[Booth8Cycle.scala 60:44]
    node _T_31 = bits(reset, 0, 0) @[Booth8Cycle.scala 61:17]
    node _T_32 = eq(_T_31, UInt<1>("h0")) @[Booth8Cycle.scala 61:17]
    node _T_33 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 64:49]
    node _T_34 = cat(_T_33, lastBit) @[Cat.scala 29:58]
    node _T_35 = eq(_T_34, UInt<2>("h2")) @[Booth8Cycle.scala 64:63]
    node _T_36 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 64:87]
    node _T_37 = cat(_T_36, lastBit) @[Cat.scala 29:58]
    node _T_38 = eq(_T_37, UInt<1>("h1")) @[Booth8Cycle.scala 64:101]
    node _T_39 = or(_T_35, _T_38) @[Booth8Cycle.scala 64:71]
    node _T_40 = sub(acc, io_multiplicand) @[Booth8Cycle.scala 65:44]
    node _T_41 = tail(_T_40, 1) @[Booth8Cycle.scala 65:44]
    node _T_42 = bits(reset, 0, 0) @[Booth8Cycle.scala 66:17]
    node _T_43 = eq(_T_42, UInt<1>("h0")) @[Booth8Cycle.scala 66:17]
    node _T_44 = bits(reset, 0, 0) @[Booth8Cycle.scala 71:17]
    node _T_45 = eq(_T_44, UInt<1>("h0")) @[Booth8Cycle.scala 71:17]
    node _GEN_2 = mux(_T_39, _T_41, acc) @[Booth8Cycle.scala 64:110]
    node _GEN_3 = mux(_T_27, _T_30, _GEN_2) @[Booth8Cycle.scala 59:66]
    node _GEN_4 = mux(_T_3, _GEN_1, _GEN_3) @[Booth8Cycle.scala 41:45]
    node _T_46 = bits(multFrame, 15, 0) @[Booth8Cycle.scala 76:38]
    node _T_47 = cat(acc, _T_46) @[Cat.scala 29:58]
    node _T_48 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 79:37]
    node _T_49 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 82:43]
    node _T_50 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 82:58]
    node _T_51 = bits(multFrame, 31, 2) @[Booth8Cycle.scala 82:73]
    node _T_52 = cat(_T_49, _T_50) @[Cat.scala 29:58]
    node _T_53 = cat(_T_52, _T_51) @[Cat.scala 29:58]
    node _T_54 = add(iter, UInt<1>("h1")) @[Booth8Cycle.scala 88:30]
    node _T_55 = tail(_T_54, 1) @[Booth8Cycle.scala 88:30]
    node _GEN_5 = mux(_T_1, UInt<1>("h1"), UInt<1>("h0")) @[Booth8Cycle.scala 36:29]
    node _GEN_6 = mux(_T_1, acc, _GEN_4) @[Booth8Cycle.scala 36:29]
    node _GEN_7 = mux(_T_1, multFrame, _T_53) @[Booth8Cycle.scala 36:29]
    node _GEN_8 = mux(_T_1, lastBit, _T_48) @[Booth8Cycle.scala 36:29]
    node _GEN_9 = mux(_T_1, iter, _T_55) @[Booth8Cycle.scala 36:29]
    node _GEN_10 = mux(io_reset, UInt<1>("h0"), _GEN_6) @[Booth8Cycle.scala 27:19]
    node _GEN_11 = mux(io_reset, UInt<1>("h0"), _GEN_9) @[Booth8Cycle.scala 27:19]
    node _GEN_12 = mux(io_reset, UInt<1>("h0"), _GEN_8) @[Booth8Cycle.scala 27:19]
    node _GEN_13 = mux(io_reset, _T, _GEN_7) @[Booth8Cycle.scala 27:19]
    node _GEN_14 = mux(io_reset, UInt<1>("h0"), _GEN_5) @[Booth8Cycle.scala 27:19]
    node _T_56 = bits(reset, 0, 0) @[Booth8Cycle.scala 93:13]
    node _T_57 = eq(_T_56, UInt<1>("h0")) @[Booth8Cycle.scala 93:13]
    io_finished <= _GEN_14 @[Booth8Cycle.scala 24:15 Booth8Cycle.scala 37:29]
    io_product <= multFrame @[Booth8Cycle.scala 23:15]
    acc <= mux(reset, UInt<16>("h0"), bits(_GEN_10, 15, 0)) @[Booth8Cycle.scala 28:19 Booth8Cycle.scala 43:37 Booth8Cycle.scala 48:37 Booth8Cycle.scala 53:37 Booth8Cycle.scala 60:37 Booth8Cycle.scala 65:37 Booth8Cycle.scala 70:37]
    iter <= mux(reset, UInt<4>("h0"), _GEN_11) @[Booth8Cycle.scala 29:19 Booth8Cycle.scala 88:22]
    lastBit <= mux(reset, UInt<1>("h0"), _GEN_12) @[Booth8Cycle.scala 30:19 Booth8Cycle.scala 79:25]
    multFrame <= mux(reset, UInt<32>("h0"), _GEN_13) @[Booth8Cycle.scala 31:19 Booth8Cycle.scala 76:17 Booth8Cycle.scala 82:27]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_3), _T_6), _T_11), UInt<1>("h1")), "Accumulator += 2 * multiplicand\n") @[Booth8Cycle.scala 44:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_3), eq(_T_6, UInt<1>("h0"))), _T_18), _T_22), UInt<1>("h1")), "Accumulator += multiplicand\n") @[Booth8Cycle.scala 49:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_3), eq(_T_6, UInt<1>("h0"))), eq(_T_18, UInt<1>("h0"))), _T_24), UInt<1>("h1")), "Doing Nothing\n") @[Booth8Cycle.scala 54:17]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_3, UInt<1>("h0"))), _T_27), _T_32), UInt<1>("h1")), "Accumulator -= 2 * multiplicand\n") @[Booth8Cycle.scala 61:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_3, UInt<1>("h0"))), eq(_T_27, UInt<1>("h0"))), _T_39), _T_43), UInt<1>("h1")), "Accumulator -= multiplicand\n") @[Booth8Cycle.scala 66:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_3, UInt<1>("h0"))), eq(_T_27, UInt<1>("h0"))), eq(_T_39, UInt<1>("h0"))), _T_45), UInt<1>("h1")), "Doing Nothing\n") @[Booth8Cycle.scala 71:17]
    printf(clock, and(and(UInt<1>("h1"), _T_57), UInt<1>("h1")), "      Iteration: %d || MultFrame: %b\n", iter, multFrame) @[Booth8Cycle.scala 93:13]
