;buildInfoPackage: chisel3, version: 3.2.6, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Booth8Cycle : 
  module Booth8Cycle : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip multiplicand : UInt<16>, flip multiplier : UInt<16>, flip start : UInt<1>, finished : UInt<1>, product : UInt<32>}
    
    reg accUpper : UInt<16>, clock with : (reset => (reset, UInt<16>("h00"))) @[Booth8Cycle.scala 25:26]
    reg accLower : UInt<16>, clock with : (reset => (reset, UInt<16>("h00"))) @[Booth8Cycle.scala 26:26]
    reg mcd : UInt<16>, clock with : (reset => (reset, UInt<16>("h00"))) @[Booth8Cycle.scala 27:21]
    reg mpl : UInt<17>, clock with : (reset => (reset, UInt<17>("h00"))) @[Booth8Cycle.scala 28:21]
    reg iter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Booth8Cycle.scala 29:27]
    node _T = cat(accUpper, accLower) @[Cat.scala 29:58]
    io.product <= _T @[Booth8Cycle.scala 32:15]
    io.finished <= UInt<1>("h00") @[Booth8Cycle.scala 33:15]
    when io.start : @[Booth8Cycle.scala 36:19]
      accUpper <= UInt<1>("h00") @[Booth8Cycle.scala 37:18]
      accLower <= UInt<1>("h00") @[Booth8Cycle.scala 38:14]
      mcd <= io.multiplicand @[Booth8Cycle.scala 39:14]
      mpl <= io.multiplier @[Booth8Cycle.scala 40:14]
      iter <= UInt<1>("h00") @[Booth8Cycle.scala 41:14]
      node _T_1 = bits(reset, 0, 0) @[Booth8Cycle.scala 42:11]
      node _T_2 = eq(_T_1, UInt<1>("h00")) @[Booth8Cycle.scala 42:11]
      when _T_2 : @[Booth8Cycle.scala 42:11]
        printf(clock, UInt<1>(1), "Test Case Initial: Multiplicand: %b  ||  Multiplier: %b\n", mcd, mpl) @[Booth8Cycle.scala 42:11]
        skip @[Booth8Cycle.scala 42:11]
      skip @[Booth8Cycle.scala 36:19]
    else : @[Booth8Cycle.scala 46:14]
      node _T_3 = lt(iter, UInt<4>("h08")) @[Booth8Cycle.scala 47:16]
      when _T_3 : @[Booth8Cycle.scala 47:23]
        node _T_4 = bits(mpl, 2, 0) @[Booth8Cycle.scala 48:26]
        node _T_5 = bits(reset, 0, 0) @[Booth8Cycle.scala 49:13]
        node _T_6 = eq(_T_5, UInt<1>("h00")) @[Booth8Cycle.scala 49:13]
        when _T_6 : @[Booth8Cycle.scala 49:13]
          printf(clock, UInt<1>(1), "Three-Bit-Op: %b\n", _T_4) @[Booth8Cycle.scala 49:13]
          skip @[Booth8Cycle.scala 49:13]
        node _T_7 = eq(UInt<1>("h00"), _T_4) @[Conditional.scala 37:30]
        when _T_7 : @[Conditional.scala 40:58]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<1>("h01"), _T_4) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node _T_9 = add(accUpper, mcd) @[Booth8Cycle.scala 56:32]
            node _T_10 = tail(_T_9, 1) @[Booth8Cycle.scala 56:32]
            accUpper <= _T_10 @[Booth8Cycle.scala 56:20]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_11 = eq(UInt<2>("h02"), _T_4) @[Conditional.scala 37:30]
            when _T_11 : @[Conditional.scala 39:67]
              node _T_12 = add(accUpper, mcd) @[Booth8Cycle.scala 59:32]
              node _T_13 = tail(_T_12, 1) @[Booth8Cycle.scala 59:32]
              accUpper <= _T_13 @[Booth8Cycle.scala 59:20]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<2>("h03"), _T_4) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = add(accUpper, mcd) @[Booth8Cycle.scala 62:32]
                node _T_16 = tail(_T_15, 1) @[Booth8Cycle.scala 62:32]
                node _T_17 = add(_T_16, mcd) @[Booth8Cycle.scala 62:38]
                node _T_18 = tail(_T_17, 1) @[Booth8Cycle.scala 62:38]
                accUpper <= _T_18 @[Booth8Cycle.scala 62:20]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_19 = eq(UInt<3>("h04"), _T_4) @[Conditional.scala 37:30]
                when _T_19 : @[Conditional.scala 39:67]
                  node _T_20 = sub(accUpper, mcd) @[Booth8Cycle.scala 65:32]
                  node _T_21 = tail(_T_20, 1) @[Booth8Cycle.scala 65:32]
                  node _T_22 = sub(_T_21, mcd) @[Booth8Cycle.scala 65:38]
                  node _T_23 = tail(_T_22, 1) @[Booth8Cycle.scala 65:38]
                  accUpper <= _T_23 @[Booth8Cycle.scala 65:20]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_24 = eq(UInt<3>("h05"), _T_4) @[Conditional.scala 37:30]
                  when _T_24 : @[Conditional.scala 39:67]
                    node _T_25 = sub(accUpper, mcd) @[Booth8Cycle.scala 68:32]
                    node _T_26 = tail(_T_25, 1) @[Booth8Cycle.scala 68:32]
                    accUpper <= _T_26 @[Booth8Cycle.scala 68:20]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_27 = eq(UInt<3>("h06"), _T_4) @[Conditional.scala 37:30]
                    when _T_27 : @[Conditional.scala 39:67]
                      node _T_28 = sub(accUpper, mcd) @[Booth8Cycle.scala 71:32]
                      node _T_29 = tail(_T_28, 1) @[Booth8Cycle.scala 71:32]
                      accUpper <= _T_29 @[Booth8Cycle.scala 71:20]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_30 = eq(UInt<3>("h07"), _T_4) @[Conditional.scala 37:30]
                      when _T_30 : @[Conditional.scala 39:67]
                        skip @[Conditional.scala 39:67]
        node _T_31 = dshl(mpl, UInt<2>("h02")) @[Booth8Cycle.scala 78:19]
        mpl <= _T_31 @[Booth8Cycle.scala 78:12]
        node _T_32 = dshl(accUpper, UInt<2>("h02")) @[Booth8Cycle.scala 79:28]
        accUpper <= _T_32 @[Booth8Cycle.scala 79:16]
        node _T_33 = dshl(accLower, UInt<2>("h02")) @[Booth8Cycle.scala 80:28]
        accLower <= _T_33 @[Booth8Cycle.scala 80:16]
        node _T_34 = add(iter, UInt<1>("h01")) @[Booth8Cycle.scala 81:24]
        node _T_35 = tail(_T_34, 1) @[Booth8Cycle.scala 81:24]
        iter <= _T_35 @[Booth8Cycle.scala 81:16]
        skip @[Booth8Cycle.scala 47:23]
      else : @[Booth8Cycle.scala 84:16]
        io.finished <= UInt<1>("h01") @[Booth8Cycle.scala 85:19]
        iter <= iter @[Booth8Cycle.scala 86:19]
        skip @[Booth8Cycle.scala 84:16]
      skip @[Booth8Cycle.scala 46:14]
    
