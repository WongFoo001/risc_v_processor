circuit Booth8Cycle :
  module Booth8Cycle :
    input clock : Clock
    input reset : UInt<1>
    input io_multiplicand : UInt<16>
    input io_multiplier : UInt<16>
    input io_reset : UInt<1>
    output io_finished : UInt<1>
    output io_product : UInt<32>
  
    reg acc : UInt<16>, clock with :
      reset => (UInt<1>("h0"), acc) @[Booth8Cycle.scala 17:26]
    reg iter : UInt<4>, clock with :
      reset => (UInt<1>("h0"), iter) @[Booth8Cycle.scala 18:32]
    reg lastBit : UInt<1>, clock with :
      reset => (UInt<1>("h0"), lastBit) @[Booth8Cycle.scala 19:32]
    reg multFrame : UInt<32>, clock with :
      reset => (UInt<1>("h0"), multFrame) @[Booth8Cycle.scala 20:32]
    node _T = cat(acc, io_multiplier) @[Cat.scala 29:58]
    node _T_1 = eq(iter, UInt<3>("h7")) @[Booth8Cycle.scala 36:20]
    node _T_2 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 41:36]
    node _T_3 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 41:50]
    node _T_4 = cat(_T_2, _T_3) @[Cat.scala 29:58]
    node _T_5 = cat(_T_4, lastBit) @[Cat.scala 29:58]
    node _T_6 = bits(reset, 0, 0) @[Booth8Cycle.scala 42:13]
    node _T_7 = eq(_T_6, UInt<1>("h0")) @[Booth8Cycle.scala 42:13]
    node _T_8 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 44:32]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[Booth8Cycle.scala 44:36]
    node _T_10 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 45:43]
    node _T_11 = cat(_T_10, lastBit) @[Cat.scala 29:58]
    node _T_12 = eq(_T_11, UInt<2>("h3")) @[Booth8Cycle.scala 45:57]
    node _T_13 = shl(io_multiplicand, 1) @[Booth8Cycle.scala 46:63]
    node _T_14 = add(acc, _T_13) @[Booth8Cycle.scala 46:44]
    node _T_15 = tail(_T_14, 1) @[Booth8Cycle.scala 46:44]
    node _T_16 = bits(reset, 0, 0) @[Booth8Cycle.scala 47:17]
    node _T_17 = eq(_T_16, UInt<1>("h0")) @[Booth8Cycle.scala 47:17]
    node _T_18 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 50:49]
    node _T_19 = cat(_T_18, lastBit) @[Cat.scala 29:58]
    node _T_20 = eq(_T_19, UInt<2>("h2")) @[Booth8Cycle.scala 50:63]
    node _T_21 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 50:87]
    node _T_22 = cat(_T_21, lastBit) @[Cat.scala 29:58]
    node _T_23 = eq(_T_22, UInt<1>("h1")) @[Booth8Cycle.scala 50:101]
    node _T_24 = or(_T_20, _T_23) @[Booth8Cycle.scala 50:71]
    node _T_25 = add(acc, io_multiplicand) @[Booth8Cycle.scala 51:44]
    node _T_26 = tail(_T_25, 1) @[Booth8Cycle.scala 51:44]
    node _T_27 = bits(reset, 0, 0) @[Booth8Cycle.scala 52:17]
    node _T_28 = eq(_T_27, UInt<1>("h0")) @[Booth8Cycle.scala 52:17]
    node _T_29 = bits(reset, 0, 0) @[Booth8Cycle.scala 57:17]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[Booth8Cycle.scala 57:17]
    node _GEN_0 = mux(_T_24, _T_26, acc) @[Booth8Cycle.scala 50:110]
    node _GEN_1 = mux(_T_12, _T_15, _GEN_0) @[Booth8Cycle.scala 45:66]
    node _T_31 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 62:43]
    node _T_32 = cat(_T_31, lastBit) @[Cat.scala 29:58]
    node _T_33 = eq(_T_32, UInt<1>("h0")) @[Booth8Cycle.scala 62:57]
    node _T_34 = shl(io_multiplicand, 1) @[Booth8Cycle.scala 63:63]
    node _T_35 = sub(acc, _T_34) @[Booth8Cycle.scala 63:44]
    node _T_36 = tail(_T_35, 1) @[Booth8Cycle.scala 63:44]
    node _T_37 = bits(reset, 0, 0) @[Booth8Cycle.scala 64:17]
    node _T_38 = eq(_T_37, UInt<1>("h0")) @[Booth8Cycle.scala 64:17]
    node _T_39 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 67:49]
    node _T_40 = cat(_T_39, lastBit) @[Cat.scala 29:58]
    node _T_41 = eq(_T_40, UInt<2>("h2")) @[Booth8Cycle.scala 67:63]
    node _T_42 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 67:87]
    node _T_43 = cat(_T_42, lastBit) @[Cat.scala 29:58]
    node _T_44 = eq(_T_43, UInt<1>("h1")) @[Booth8Cycle.scala 67:101]
    node _T_45 = or(_T_41, _T_44) @[Booth8Cycle.scala 67:71]
    node _T_46 = sub(acc, io_multiplicand) @[Booth8Cycle.scala 68:44]
    node _T_47 = tail(_T_46, 1) @[Booth8Cycle.scala 68:44]
    node _T_48 = bits(reset, 0, 0) @[Booth8Cycle.scala 69:17]
    node _T_49 = eq(_T_48, UInt<1>("h0")) @[Booth8Cycle.scala 69:17]
    node _T_50 = bits(reset, 0, 0) @[Booth8Cycle.scala 74:17]
    node _T_51 = eq(_T_50, UInt<1>("h0")) @[Booth8Cycle.scala 74:17]
    node _GEN_2 = mux(_T_45, _T_47, acc) @[Booth8Cycle.scala 67:110]
    node _GEN_3 = mux(_T_33, _T_36, _GEN_2) @[Booth8Cycle.scala 62:66]
    node _GEN_4 = mux(_T_9, _GEN_1, _GEN_3) @[Booth8Cycle.scala 44:45]
    node _T_52 = bits(multFrame, 15, 0) @[Booth8Cycle.scala 79:38]
    node _T_53 = cat(acc, _T_52) @[Cat.scala 29:58]
    node _T_54 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 82:37]
    node _T_55 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 85:43]
    node _T_56 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 85:58]
    node _T_57 = bits(multFrame, 31, 2) @[Booth8Cycle.scala 85:73]
    node _T_58 = cat(_T_55, _T_56) @[Cat.scala 29:58]
    node _T_59 = cat(_T_58, _T_57) @[Cat.scala 29:58]
    node _T_60 = add(iter, UInt<1>("h1")) @[Booth8Cycle.scala 91:30]
    node _T_61 = tail(_T_60, 1) @[Booth8Cycle.scala 91:30]
    node _GEN_5 = mux(_T_1, UInt<1>("h1"), UInt<1>("h0")) @[Booth8Cycle.scala 36:29]
    node _GEN_6 = mux(_T_1, acc, _GEN_4) @[Booth8Cycle.scala 36:29]
    node _GEN_7 = mux(_T_1, multFrame, _T_59) @[Booth8Cycle.scala 36:29]
    node _GEN_8 = mux(_T_1, lastBit, _T_54) @[Booth8Cycle.scala 36:29]
    node _GEN_9 = mux(_T_1, iter, _T_61) @[Booth8Cycle.scala 36:29]
    node _GEN_10 = mux(io_reset, UInt<1>("h0"), _GEN_6) @[Booth8Cycle.scala 27:19]
    node _GEN_11 = mux(io_reset, UInt<1>("h0"), _GEN_9) @[Booth8Cycle.scala 27:19]
    node _GEN_12 = mux(io_reset, UInt<1>("h0"), _GEN_8) @[Booth8Cycle.scala 27:19]
    node _GEN_13 = mux(io_reset, _T, _GEN_7) @[Booth8Cycle.scala 27:19]
    node _GEN_14 = mux(io_reset, UInt<1>("h0"), _GEN_5) @[Booth8Cycle.scala 27:19]
    node _T_62 = bits(reset, 0, 0) @[Booth8Cycle.scala 96:13]
    node _T_63 = eq(_T_62, UInt<1>("h0")) @[Booth8Cycle.scala 96:13]
    io_finished <= _GEN_14 @[Booth8Cycle.scala 24:15 Booth8Cycle.scala 37:29]
    io_product <= multFrame @[Booth8Cycle.scala 23:15]
    acc <= mux(reset, UInt<16>("h0"), bits(_GEN_10, 15, 0)) @[Booth8Cycle.scala 28:19 Booth8Cycle.scala 46:37 Booth8Cycle.scala 51:37 Booth8Cycle.scala 56:37 Booth8Cycle.scala 63:37 Booth8Cycle.scala 68:37 Booth8Cycle.scala 73:37]
    iter <= mux(reset, UInt<4>("h0"), _GEN_11) @[Booth8Cycle.scala 29:19 Booth8Cycle.scala 91:22]
    lastBit <= mux(reset, UInt<1>("h0"), _GEN_12) @[Booth8Cycle.scala 30:19 Booth8Cycle.scala 82:25]
    multFrame <= mux(reset, UInt<32>("h0"), _GEN_13) @[Booth8Cycle.scala 31:19 Booth8Cycle.scala 79:17 Booth8Cycle.scala 85:27]
    printf(clock, and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_7), UInt<1>("h1")), "Three bit Pair: %b\n", _T_5) @[Booth8Cycle.scala 42:13]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_9), _T_12), _T_17), UInt<1>("h1")), "Accumulator += 2 * multiplicand\n") @[Booth8Cycle.scala 47:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_9), eq(_T_12, UInt<1>("h0"))), _T_24), _T_28), UInt<1>("h1")), "Accumulator += multiplicand\n") @[Booth8Cycle.scala 52:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), _T_9), eq(_T_12, UInt<1>("h0"))), eq(_T_24, UInt<1>("h0"))), _T_30), UInt<1>("h1")), "Doing Nothing\n") @[Booth8Cycle.scala 57:17]
    printf(clock, and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_9, UInt<1>("h0"))), _T_33), _T_38), UInt<1>("h1")), "Accumulator -= 2 * multiplicand\n") @[Booth8Cycle.scala 64:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_9, UInt<1>("h0"))), eq(_T_33, UInt<1>("h0"))), _T_45), _T_49), UInt<1>("h1")), "Accumulator -= multiplicand\n") @[Booth8Cycle.scala 69:17]
    printf(clock, and(and(and(and(and(and(and(UInt<1>("h1"), eq(io_reset, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_9, UInt<1>("h0"))), eq(_T_33, UInt<1>("h0"))), eq(_T_45, UInt<1>("h0"))), _T_51), UInt<1>("h1")), "Doing Nothing\n") @[Booth8Cycle.scala 74:17]
    printf(clock, and(and(UInt<1>("h1"), _T_63), UInt<1>("h1")), "      Iteration: %d || MultFrame: %b\n", iter, multFrame) @[Booth8Cycle.scala 96:13]
