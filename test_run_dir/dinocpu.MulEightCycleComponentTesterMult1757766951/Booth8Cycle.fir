;buildInfoPackage: chisel3, version: 3.2.6, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Booth8Cycle : 
  module Booth8Cycle : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip multiplicand : UInt<16>, flip multiplier : UInt<16>, flip reset : UInt<1>, finished : UInt<1>, product : UInt<32>}
    
    reg acc : UInt<16>, clock with : (reset => (reset, UInt<16>("h00"))) @[Booth8Cycle.scala 17:26]
    reg iter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Booth8Cycle.scala 18:32]
    reg lastBit : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Booth8Cycle.scala 19:32]
    reg multFrame : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Booth8Cycle.scala 20:32]
    io.product <= multFrame @[Booth8Cycle.scala 23:15]
    io.finished <= UInt<1>("h00") @[Booth8Cycle.scala 24:15]
    when io.reset : @[Booth8Cycle.scala 27:19]
      acc <= UInt<1>("h00") @[Booth8Cycle.scala 28:19]
      iter <= UInt<1>("h00") @[Booth8Cycle.scala 29:19]
      lastBit <= UInt<1>("h00") @[Booth8Cycle.scala 30:19]
      node _T = cat(acc, io.multiplier) @[Cat.scala 29:58]
      multFrame <= _T @[Booth8Cycle.scala 31:19]
      skip @[Booth8Cycle.scala 27:19]
    else : @[Booth8Cycle.scala 35:14]
      node _T_1 = eq(iter, UInt<3>("h07")) @[Booth8Cycle.scala 36:20]
      when _T_1 : @[Booth8Cycle.scala 36:29]
        io.finished <= UInt<1>("h01") @[Booth8Cycle.scala 37:29]
        skip @[Booth8Cycle.scala 36:29]
      else : @[Booth8Cycle.scala 40:20]
        node _T_2 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 41:36]
        node _T_3 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 41:50]
        node _T_4 = cat(_T_2, _T_3) @[Cat.scala 29:58]
        node _T_5 = cat(_T_4, lastBit) @[Cat.scala 29:58]
        node _T_6 = bits(reset, 0, 0) @[Booth8Cycle.scala 42:13]
        node _T_7 = eq(_T_6, UInt<1>("h00")) @[Booth8Cycle.scala 42:13]
        when _T_7 : @[Booth8Cycle.scala 42:13]
          printf(clock, UInt<1>(1), "Three bit Pair: %b\n", _T_5) @[Booth8Cycle.scala 42:13]
          skip @[Booth8Cycle.scala 42:13]
        node _T_8 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 44:32]
        node _T_9 = eq(_T_8, UInt<1>("h00")) @[Booth8Cycle.scala 44:36]
        when _T_9 : @[Booth8Cycle.scala 44:45]
          node _T_10 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 45:43]
          node _T_11 = cat(_T_10, lastBit) @[Cat.scala 29:58]
          node _T_12 = eq(_T_11, UInt<2>("h03")) @[Booth8Cycle.scala 45:57]
          when _T_12 : @[Booth8Cycle.scala 45:66]
            node _T_13 = shl(io.multiplicand, 1) @[Booth8Cycle.scala 46:63]
            node _T_14 = add(acc, _T_13) @[Booth8Cycle.scala 46:44]
            node _T_15 = tail(_T_14, 1) @[Booth8Cycle.scala 46:44]
            acc <= _T_15 @[Booth8Cycle.scala 46:37]
            node _T_16 = bits(reset, 0, 0) @[Booth8Cycle.scala 47:17]
            node _T_17 = eq(_T_16, UInt<1>("h00")) @[Booth8Cycle.scala 47:17]
            when _T_17 : @[Booth8Cycle.scala 47:17]
              printf(clock, UInt<1>(1), "Accumulator += 2 * multiplicand\n") @[Booth8Cycle.scala 47:17]
              skip @[Booth8Cycle.scala 47:17]
            skip @[Booth8Cycle.scala 45:66]
          else : @[Booth8Cycle.scala 50:110]
            node _T_18 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 50:49]
            node _T_19 = cat(_T_18, lastBit) @[Cat.scala 29:58]
            node _T_20 = eq(_T_19, UInt<2>("h02")) @[Booth8Cycle.scala 50:63]
            node _T_21 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 50:87]
            node _T_22 = cat(_T_21, lastBit) @[Cat.scala 29:58]
            node _T_23 = eq(_T_22, UInt<1>("h01")) @[Booth8Cycle.scala 50:101]
            node _T_24 = or(_T_20, _T_23) @[Booth8Cycle.scala 50:71]
            when _T_24 : @[Booth8Cycle.scala 50:110]
              node _T_25 = add(acc, io.multiplicand) @[Booth8Cycle.scala 51:44]
              node _T_26 = tail(_T_25, 1) @[Booth8Cycle.scala 51:44]
              acc <= _T_26 @[Booth8Cycle.scala 51:37]
              node _T_27 = bits(reset, 0, 0) @[Booth8Cycle.scala 52:17]
              node _T_28 = eq(_T_27, UInt<1>("h00")) @[Booth8Cycle.scala 52:17]
              when _T_28 : @[Booth8Cycle.scala 52:17]
                printf(clock, UInt<1>(1), "Accumulator += multiplicand\n") @[Booth8Cycle.scala 52:17]
                skip @[Booth8Cycle.scala 52:17]
              skip @[Booth8Cycle.scala 50:110]
            else : @[Booth8Cycle.scala 55:36]
              acc <= acc @[Booth8Cycle.scala 56:37]
              node _T_29 = bits(reset, 0, 0) @[Booth8Cycle.scala 57:17]
              node _T_30 = eq(_T_29, UInt<1>("h00")) @[Booth8Cycle.scala 57:17]
              when _T_30 : @[Booth8Cycle.scala 57:17]
                printf(clock, UInt<1>(1), "Doing Nothing\n") @[Booth8Cycle.scala 57:17]
                skip @[Booth8Cycle.scala 57:17]
              skip @[Booth8Cycle.scala 55:36]
          skip @[Booth8Cycle.scala 44:45]
        else : @[Booth8Cycle.scala 61:28]
          node _T_31 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 62:43]
          node _T_32 = cat(_T_31, lastBit) @[Cat.scala 29:58]
          node _T_33 = eq(_T_32, UInt<1>("h00")) @[Booth8Cycle.scala 62:57]
          when _T_33 : @[Booth8Cycle.scala 62:66]
            node _T_34 = shl(io.multiplicand, 1) @[Booth8Cycle.scala 63:63]
            node _T_35 = sub(acc, _T_34) @[Booth8Cycle.scala 63:44]
            node _T_36 = tail(_T_35, 1) @[Booth8Cycle.scala 63:44]
            acc <= _T_36 @[Booth8Cycle.scala 63:37]
            node _T_37 = bits(reset, 0, 0) @[Booth8Cycle.scala 64:17]
            node _T_38 = eq(_T_37, UInt<1>("h00")) @[Booth8Cycle.scala 64:17]
            when _T_38 : @[Booth8Cycle.scala 64:17]
              printf(clock, UInt<1>(1), "Accumulator -= 2 * multiplicand\n") @[Booth8Cycle.scala 64:17]
              skip @[Booth8Cycle.scala 64:17]
            skip @[Booth8Cycle.scala 62:66]
          else : @[Booth8Cycle.scala 67:110]
            node _T_39 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 67:49]
            node _T_40 = cat(_T_39, lastBit) @[Cat.scala 29:58]
            node _T_41 = eq(_T_40, UInt<2>("h02")) @[Booth8Cycle.scala 67:63]
            node _T_42 = bits(multFrame, 0, 0) @[Booth8Cycle.scala 67:87]
            node _T_43 = cat(_T_42, lastBit) @[Cat.scala 29:58]
            node _T_44 = eq(_T_43, UInt<1>("h01")) @[Booth8Cycle.scala 67:101]
            node _T_45 = or(_T_41, _T_44) @[Booth8Cycle.scala 67:71]
            when _T_45 : @[Booth8Cycle.scala 67:110]
              node _T_46 = sub(acc, io.multiplicand) @[Booth8Cycle.scala 68:44]
              node _T_47 = tail(_T_46, 1) @[Booth8Cycle.scala 68:44]
              acc <= _T_47 @[Booth8Cycle.scala 68:37]
              node _T_48 = bits(reset, 0, 0) @[Booth8Cycle.scala 69:17]
              node _T_49 = eq(_T_48, UInt<1>("h00")) @[Booth8Cycle.scala 69:17]
              when _T_49 : @[Booth8Cycle.scala 69:17]
                printf(clock, UInt<1>(1), "Accumulator -= multiplicand\n") @[Booth8Cycle.scala 69:17]
                skip @[Booth8Cycle.scala 69:17]
              skip @[Booth8Cycle.scala 67:110]
            else : @[Booth8Cycle.scala 72:36]
              acc <= acc @[Booth8Cycle.scala 73:37]
              node _T_50 = bits(reset, 0, 0) @[Booth8Cycle.scala 74:17]
              node _T_51 = eq(_T_50, UInt<1>("h00")) @[Booth8Cycle.scala 74:17]
              when _T_51 : @[Booth8Cycle.scala 74:17]
                printf(clock, UInt<1>(1), "Doing Nothing\n") @[Booth8Cycle.scala 74:17]
                skip @[Booth8Cycle.scala 74:17]
              skip @[Booth8Cycle.scala 72:36]
          skip @[Booth8Cycle.scala 61:28]
        node _T_52 = bits(multFrame, 15, 0) @[Booth8Cycle.scala 79:38]
        node _T_53 = cat(acc, _T_52) @[Cat.scala 29:58]
        multFrame <= _T_53 @[Booth8Cycle.scala 79:17]
        node _T_54 = bits(multFrame, 1, 1) @[Booth8Cycle.scala 82:37]
        lastBit <= _T_54 @[Booth8Cycle.scala 82:25]
        node _T_55 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 85:43]
        node _T_56 = bits(multFrame, 31, 31) @[Booth8Cycle.scala 85:58]
        node _T_57 = bits(multFrame, 31, 2) @[Booth8Cycle.scala 85:73]
        node _T_58 = cat(_T_55, _T_56) @[Cat.scala 29:58]
        node _T_59 = cat(_T_58, _T_57) @[Cat.scala 29:58]
        multFrame <= _T_59 @[Booth8Cycle.scala 85:27]
        node _T_60 = add(iter, UInt<1>("h01")) @[Booth8Cycle.scala 91:30]
        node _T_61 = tail(_T_60, 1) @[Booth8Cycle.scala 91:30]
        iter <= _T_61 @[Booth8Cycle.scala 91:22]
        skip @[Booth8Cycle.scala 40:20]
      skip @[Booth8Cycle.scala 35:14]
    node _T_62 = bits(reset, 0, 0) @[Booth8Cycle.scala 96:13]
    node _T_63 = eq(_T_62, UInt<1>("h00")) @[Booth8Cycle.scala 96:13]
    when _T_63 : @[Booth8Cycle.scala 96:13]
      printf(clock, UInt<1>(1), "      Iteration: %d || MultFrame: %b\n", iter, multFrame) @[Booth8Cycle.scala 96:13]
      skip @[Booth8Cycle.scala 96:13]
    
